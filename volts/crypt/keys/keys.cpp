#include "keys.h"

namespace volts::crypt::keys
{
    using namespace svl;

    constexpr key lvl0_key = {
        0, 0, key_type::lvl0,
        { 0xCA, 0x7A, 0x24, 0xEC, 0x38, 0xBD, 0xB4, 0x5B, 0x98, 0xCC, 0xD7, 0xD3, 0x63, 0xEA, 0x2A, 0xF0, 0xC3, 0x26, 0xE6, 0x50, 0x81, 0xE0, 0x63, 0x0C, 0xB9, 0xAB, 0x2D, 0x21, 0x58, 0x65, 0x87, 0x8A },
        { 0xF9, 0x20, 0x5F, 0x46, 0xF6, 0x02, 0x16, 0x97, 0xE6, 0x70, 0xF1, 0x3D, 0xFA, 0x72, 0x62, 0x12 },
        { 0xA8, 0xFD, 0x6D, 0xB2, 0x45, 0x32, 0xD0, 0x94, 0xEF, 0xA0, 0x8C, 0xB4, 0x1C, 0x9A, 0x72, 0x28, 0x7D, 0x90, 0x5C, 0x6B, 0x27, 0xB4, 0x2B, 0xE4, 0xAB, 0x92, 0x5A, 0xAF, 0x4A, 0xFF, 0xF3, 0x4D, 0x41, 0xEE, 0xB5, 0x4D, 0xD1, 0x28, 0x70, 0x0D },
        { 0x00, 0x1A, 0xD9, 0x76, 0xFC, 0xDE, 0x86, 0xF5, 0xB8, 0xFF, 0x3E, 0x63, 0xEF, 0x3A, 0x7F, 0x94, 0xE8, 0x61, 0x97, 0x5B, 0xA3 },
        51
    };

    constexpr key loader_key = {
        0, 0, key_type::loader,
        { 0xC0, 0xCE, 0xFE, 0x84, 0xC2, 0x27, 0xF7, 0x5B, 0xD0, 0x7A, 0x7E, 0xB8, 0x46, 0x50, 0x9F, 0x93, 0xB2, 0x38, 0xE7, 0x70, 0xDA, 0xCB, 0x9F, 0xF4, 0xA3, 0x88, 0xF8, 0x12, 0x48, 0x2B, 0xE2, 0x1B },
        { 0x47, 0xEE, 0x74, 0x54, 0xE4, 0x77, 0x4C, 0xC9, 0xB8, 0x96, 0x0C, 0x7B, 0x59, 0xF4, 0xC1, 0x4D },
        { 0xC2, 0xD4, 0xAA, 0xF3, 0x19, 0x35, 0x50, 0x19, 0xAF, 0x99, 0xD4, 0x4E, 0x2B, 0x58, 0xCA, 0x29, 0x25, 0x2C, 0x89, 0x12, 0x3D, 0x11, 0xD6, 0x21, 0x8F, 0x40, 0xB1, 0x38, 0xCA, 0xB2, 0x9B, 0x71, 0x01, 0xF3, 0xAE, 0xB7, 0x2A, 0x97, 0x50, 0x19 },
        { 0x00, 0xC5, 0xB2, 0xBF, 0xA1, 0xA4, 0x13, 0xDD, 0x16, 0xF2, 0x6D, 0x31, 0xC0, 0xF2, 0xED, 0x47, 0x20, 0xDC, 0xFB, 0x06, 0x70 },
        32
    };

    constexpr key lvl1_keys[] = {
        {0x0003003000000000, 0, key_type::lvl1, {0xB9, 0xF3, 0xF9, 0xE6, 0x10, 0x7C, 0xFF, 0x26, 0x80, 0xA9, 0x1E, 0x11, 0x8C, 0x24, 0x03, 0xCF, 0x4A, 0x6F, 0x18, 0xF3, 0xC7, 0xEF, 0xD7, 0xD1, 0x3D, 0x1A, 0xC4, 0xDB, 0x76, 0x0B, 0xD2, 0x22}, {0xB4, 0x36, 0x61, 0xB9, 0xA7, 0x9B, 0xAD, 0x9D, 0x8E, 0x2B, 0x04, 0x64, 0x69, 0xCD, 0xA1, 0xE7}, {0x4C, 0x87, 0x0B, 0xE8, 0x6D, 0xDD, 0x99, 0x6A, 0x92, 0xA3, 0xF7, 0xF4, 0x04, 0xF3, 0x36, 0x04, 0x24, 0x4A, 0x1D, 0x02, 0xAB, 0x5B, 0x78, 0xBC, 0x9D, 0xAF, 0x03, 0x0B, 0x78, 0xBE, 0x88, 0x67, 0xCF, 0x58, 0x61, 0x71, 0xB7, 0xD4, 0x5D, 0x20}, {0x00, 0x2C, 0xC7, 0x36, 0xC7, 0xAD, 0x06, 0xD2, 0x64, 0xE9, 0xAB, 0x66, 0x3E, 0xB1, 0xF3, 0x5F, 0x5D, 0xC1, 0x59, 0x24, 0x8C}, 0x33},
        {0x0003004200000000, 0, key_type::lvl1, {0xB8, 0x80, 0x59, 0x38, 0x56, 0xC8, 0xC6, 0xD2, 0x03, 0x75, 0x85, 0x62, 0x6A, 0x12, 0x97, 0x7F, 0x50, 0xDC, 0xFC, 0xF3, 0xF1, 0x32, 0xD2, 0xC8, 0x9A, 0xA6, 0xE6, 0x70, 0xEA, 0xFC, 0x16, 0x46}, {0xA7, 0x9B, 0x05, 0xD4, 0xE3, 0x7B, 0x81, 0x17, 0xA9, 0x5E, 0x6E, 0x7C, 0x14, 0xFB, 0x64, 0x0E}, {0x74, 0x54, 0xC7, 0xCC, 0xBF, 0xC2, 0xF6, 0x6C, 0x14, 0x2D, 0x78, 0xA7, 0x30, 0xA3, 0xA6, 0xF9, 0x73, 0xCC, 0x0F, 0xB7, 0x5A, 0x46, 0xFC, 0xBB, 0x39, 0x07, 0x90, 0x13, 0x89, 0x10, 0xA0, 0xCA, 0xC7, 0x8E, 0x5E, 0x21, 0xF4, 0xDA, 0x33, 0x75}, {0x00, 0x03, 0x3A, 0x69, 0x9F, 0xDD, 0x2D, 0xA6, 0xCD, 0xD6, 0xCC, 0xC0, 0x3B, 0x2C, 0x61, 0x45, 0xF9, 0x98, 0x70, 0x6F, 0x74}, 0x34},
        {0x0003005000000000, 0, key_type::lvl1, {0x1E, 0x8E, 0xEE, 0xA9, 0xE8, 0x0A, 0x72, 0x9F, 0x3F, 0xA5, 0x2C, 0xF5, 0x23, 0xB2, 0x59, 0x41, 0xEA, 0x44, 0xB4, 0x15, 0x5D, 0x94, 0xE5, 0xDA, 0xDC, 0x5C, 0x5A, 0x77, 0x84, 0x76, 0x20, 0xC7}, {0xE0, 0x34, 0xD3, 0x1A, 0x80, 0x31, 0x69, 0x60, 0x02, 0x4D, 0x1B, 0x3D, 0x31, 0x64, 0xFD, 0xC3}, {0x7E, 0x3A, 0x19, 0x6f, 0x4A, 0x58, 0x79, 0xF3, 0xA7, 0xB0, 0x91, 0xA2, 0x26, 0x3F, 0x7C, 0x24, 0xE1, 0x71, 0x61, 0x29, 0xB5, 0x80, 0x56, 0x6D, 0x30, 0x8D, 0x9C, 0x22, 0x54, 0xB3, 0x6A, 0xEE, 0x53, 0xDE, 0xF3, 0x0E, 0xC8, 0x5F, 0x83, 0x98}, {0x00, 0x58, 0x15, 0xD1, 0x71, 0x25, 0xD0, 0x4C, 0x33, 0x79, 0x03, 0x21, 0xDE, 0x29, 0xEB, 0x62, 0x41, 0x36, 0x51, 0x00, 0xB5}, 0x35},
        {0x0003005500000000, 0, key_type::lvl1, {0x53, 0xAB, 0xDF, 0x84, 0xBE, 0x08, 0xB0, 0x35, 0x1B, 0x73, 0x4F, 0x2B, 0x97, 0xD2, 0xBE, 0x16, 0x21, 0xBC, 0x6C, 0x88, 0x9E, 0x43, 0x62, 0xE5, 0xC7, 0x0F, 0x39, 0xD6, 0xC3, 0xED, 0x9F, 0x23}, {0x44, 0xE6, 0x52, 0x66, 0x1A, 0xC7, 0x58, 0x4D, 0xBE, 0x08, 0xEC, 0xB8, 0x10, 0xFB, 0x5F, 0xC0}, {0x73, 0x31, 0x98, 0xA7, 0x75, 0x9B, 0xC0, 0x73, 0x26, 0x75, 0x5B, 0xC9, 0x77, 0x3A, 0x8A, 0x17, 0xC8, 0xA7, 0x04, 0x3C, 0x7B, 0xDA, 0xB8, 0x3D, 0x88, 0xE2, 0x30, 0x51, 0x2E, 0x2E, 0xA3, 0x85, 0x2D, 0x7D, 0xA4, 0x26, 0x3A, 0x7E, 0x97, 0xF9}, {0x00, 0x43, 0x12, 0xC6, 0x53, 0x47, 0xAC, 0xBE, 0x95, 0xCC, 0x30, 0x64, 0x42, 0xFE, 0xFD, 0x0A, 0xF4, 0xC2, 0x93, 0x5E, 0xB3}, 0x05},
        {0x0003005600000000, 0, key_type::lvl1, {0x48, 0x79, 0x3E, 0xBD, 0xDA, 0x1A, 0xF6, 0x5D, 0x73, 0x7D, 0xA2, 0xFD, 0xA2, 0xDD, 0x10, 0x44, 0x47, 0xA6, 0x98, 0xF8, 0xA8, 0x2C, 0xAA, 0xEE, 0x99, 0x28, 0x31, 0x71, 0x1B, 0xA9, 0x4E, 0x83}, {0x15, 0xDC, 0xF3, 0xC6, 0x71, 0x47, 0xA4, 0x5D, 0x09, 0xDE, 0x75, 0x21, 0xEE, 0xCA, 0x07, 0xA1}, {0x85, 0xA8, 0x86, 0x8C, 0x32, 0x01, 0x27, 0xF1, 0x0B, 0x65, 0x98, 0x96, 0x4C, 0x69, 0x22, 0x1C, 0x08, 0x67, 0x02, 0x02, 0x1D, 0x31, 0x80, 0x35, 0x20, 0xE2, 0x1F, 0xDE, 0x4D, 0xBE, 0x82, 0x77, 0x66, 0xBE, 0x41, 0x82, 0x5C, 0xB7, 0x32, 0x8C}, {}, 0x07},
        {0x0003005600000000, 0, key_type::lvl1, {0x48, 0x79, 0x3E, 0xBD, 0xDA, 0x1A, 0xF6, 0x5D, 0x73, 0x7D, 0xA2, 0xFD, 0xA2, 0xDD, 0x10, 0x44, 0x47, 0xA6, 0x98, 0xF8, 0xA8, 0x2C, 0xAA, 0xEE, 0x99, 0x28, 0x31, 0x71, 0x1B, 0xA9, 0x4E, 0x83}, {0x15, 0xDC, 0xF3, 0xC6, 0x71, 0x47, 0xA4, 0x5D, 0x09, 0xDE, 0x75, 0x21, 0xEE, 0xCA, 0x07, 0xA1}, {0x85, 0xA8, 0x86, 0x8C, 0x32, 0x01, 0x27, 0xF1, 0x0B, 0x65, 0x98, 0x96, 0x4C, 0x69, 0x22, 0x1C, 0x08, 0x67, 0x02, 0x02, 0x1D, 0x31, 0x80, 0x35, 0x20, 0xE2, 0x1F, 0xDE, 0x4D, 0xBE, 0x82, 0x77, 0x66, 0xBE, 0x41, 0x82, 0x5C, 0xB7, 0x32, 0x8C}, {}, 0x07},
        {0x0003006600000000, 0, key_type::lvl1, {0xBD, 0x06, 0x21, 0xFA, 0x19, 0x38, 0x3C, 0x3C, 0x72, 0xEC, 0xBC, 0x3B, 0x00, 0x8F, 0x1C, 0xD5, 0x5F, 0xFD, 0x7C, 0x3B, 0xB7, 0x51, 0x0B, 0xF1, 0x1A, 0xD0, 0xCF, 0x0F, 0xC2, 0xB7, 0x09, 0x51}, {0x56, 0x9A, 0xF3, 0x74, 0x5E, 0x1E, 0x02, 0xE3, 0xE2, 0x88, 0x27, 0x3C, 0xDE, 0x24, 0x4C, 0xD8}, {0x21, 0xE2, 0x6F, 0x11, 0xC2, 0xD6, 0x94, 0x78, 0x60, 0x9D, 0xD1, 0xBD, 0x27, 0x8C, 0xDF, 0xC9, 0x40, 0xD9, 0x03, 0x86, 0x45, 0x5B, 0xA5, 0x2F, 0xCD, 0x1F, 0xA7, 0xE2, 0x7A, 0xC2, 0xAF, 0xA8, 0x26, 0xC7, 0x9A, 0x10, 0x19, 0x3B, 0x62, 0x5C}, {}, 0x07},
        {0x0003006600000000, 0, key_type::lvl1, {0xBD, 0x06, 0x21, 0xFA, 0x19, 0x38, 0x3C, 0x3C, 0x72, 0xEC, 0xBC, 0x3B, 0x00, 0x8F, 0x1C, 0xD5, 0x5F, 0xFD, 0x7C, 0x3B, 0xB7, 0x51, 0x0B, 0xF1, 0x1A, 0xD0, 0xCF, 0x0F, 0xC2, 0xB7, 0x09, 0x51}, {0x56, 0x9A, 0xF3, 0x74, 0x5E, 0x1E, 0x02, 0xE3, 0xE2, 0x88, 0x27, 0x3C, 0xDE, 0x24, 0x4C, 0xD8}, {0x21, 0xE2, 0x6F, 0x11, 0xC2, 0xD6, 0x94, 0x78, 0x60, 0x9D, 0xD1, 0xBD, 0x27, 0x8C, 0xDF, 0xC9, 0x40, 0xD9, 0x03, 0x86, 0x45, 0x5B, 0xA5, 0x2F, 0xCD, 0x1F, 0xA7, 0xE2, 0x7A, 0xC2, 0xAF, 0xA8, 0x26, 0xC7, 0x9A, 0x10, 0x19, 0x3B, 0x62, 0x5C}, {}, 0x07},
        {0x0004001100000000, 0, key_type::lvl1, {0x55, 0x7E, 0xDF, 0x6C, 0x06, 0x3F, 0x32, 0x72, 0xB0, 0xD4, 0x4E, 0xEC, 0x12, 0xF4, 0x18, 0xDA, 0x77, 0x48, 0x15, 0xB5, 0x41, 0x55, 0x97, 0xCC, 0x5F, 0x75, 0xC2, 0x1E, 0x04, 0x8B, 0xAD, 0x74}, {0x71, 0x44, 0xD7, 0x57, 0x49, 0x37, 0x81, 0x85, 0x17, 0x82, 0x62, 0x27, 0xEF, 0x4A, 0xC0, 0xB4}, {0x08, 0x5D, 0x38, 0xDB, 0xF9, 0xB7, 0x57, 0x32, 0x9E, 0xB8, 0x62, 0x10, 0x79, 0x29, 0x90, 0x9D, 0x32, 0xFA, 0x1D, 0xAE, 0x60, 0x64, 0x1B, 0xF4, 0xAC, 0x25, 0x31, 0x9D, 0x76, 0x50, 0x59, 0x7E, 0xE9, 0x77, 0xF8, 0xE8, 0x10, 0xFE, 0xEA, 0x96}, {}, 0x13},
        {0x0004005000000000, 0, key_type::lvl1, {0x10, 0xCE, 0xA0, 0x49, 0x73, 0xFC, 0xCC, 0x12, 0xEC, 0x19, 0x92, 0x45, 0x10, 0x82, 0x2D, 0x8D, 0x4C, 0x41, 0xF6, 0x57, 0xFD, 0x3D, 0x7E, 0x73, 0xF4, 0x15, 0xA8, 0xD6, 0x87, 0x42, 0x1B, 0xCD}, {0xED, 0x86, 0x99, 0x56, 0x2C, 0x6A, 0xC6, 0x52, 0x04, 0xFA, 0x16, 0x62, 0x57, 0xE7, 0xFC, 0xF4}, {0x9A, 0xF8, 0x6F, 0xC8, 0x69, 0xC1, 0x59, 0xFB, 0xB6, 0x2F, 0x7D, 0x96, 0x74, 0xEE, 0x25, 0x7A, 0xBF, 0x12, 0xE5, 0xA9, 0x6D, 0x58, 0x75, 0xB4, 0xAA, 0x73, 0xC1, 0x3C, 0x2B, 0xC1, 0x3E, 0x2A, 0x40, 0x79, 0xF9, 0x8B, 0x9B, 0x93, 0x5E, 0xE2}, {}, 0x14}
    };

    constexpr key lvl2_keys[] = {
        {0x0003003000000000, 0, key_type::lvl1, {0x94, 0x30, 0x3F, 0x69, 0x51, 0x35, 0x72, 0xAB, 0x5A, 0xE1, 0x7C, 0x8C, 0x2A, 0x18, 0x39, 0xD2, 0xC2, 0x4C, 0x28, 0xF6, 0x53, 0x89, 0xD3, 0xBB, 0xB1, 0x18, 0x94, 0xCE, 0x23, 0xE0, 0x79, 0x8F}, {0x97, 0x69, 0xBF, 0xD1, 0x87, 0xB9, 0x09, 0x90, 0xAE, 0x5F, 0xEA, 0x4E, 0x11, 0x0B, 0x9C, 0xF5}, {0xAF, 0xAF, 0x5E, 0x96, 0xAF, 0x39, 0x6C, 0xBB, 0x69, 0x07, 0x10, 0x82, 0xC4, 0x6A, 0x8F, 0x34, 0xA0, 0x30, 0xE8, 0xED, 0xB7, 0x99, 0xE0, 0xA7, 0xBE, 0x00, 0xAA, 0x26, 0x4D, 0xFF, 0x3A, 0xEB, 0xF7, 0x92, 0x39, 0x20, 0xD5, 0x59, 0x40, 0x4D}, {0x00, 0x70, 0xAB, 0xF9, 0x36, 0x1B, 0x02, 0x29, 0x18, 0x29, 0xD4, 0x79, 0xF5, 0x6A, 0xB2, 0x48, 0x20, 0x3C, 0xD3, 0xEB, 0x46}, 0x20},
        {0x0003004200000000, 0, key_type::lvl2, {0x57, 0x5B, 0x0A, 0x6C, 0x4B, 0x4F, 0x27, 0x60, 0xA0, 0x3F, 0xE4, 0x18, 0x9E, 0xBA, 0xF4, 0xD9, 0x47, 0x27, 0x9F, 0xD9, 0x82, 0xB1, 0x40, 0x70, 0x34, 0x90, 0x98, 0xB0, 0x8F, 0xF9, 0x2C, 0x10}, {0x41, 0x1C, 0xB1, 0x8F, 0x46, 0x0C, 0xE5, 0x0C, 0xAF, 0x2C, 0x42, 0x6D, 0x8F, 0x0D, 0x93, 0xC8}, {0x3F, 0xEE, 0x31, 0x39, 0x54, 0xCB, 0x30, 0x39, 0xC3, 0x21, 0xA7, 0xE3, 0x3B, 0x97, 0xFF, 0xDE, 0xC8, 0x98, 0x8A, 0x8B, 0x55, 0x75, 0x91, 0x61, 0xB0, 0x4D, 0xBF, 0x47, 0x31, 0x28, 0x4E, 0x4A, 0x81, 0x91, 0xE3, 0xF1, 0x7D, 0x32, 0xB0, 0xEA}, {0x00, 0x73, 0x07, 0x64, 0x41, 0xA0, 0x8C, 0xD1, 0x79, 0xE5, 0xFA, 0xCE, 0x34, 0x9B, 0x86, 0xDA, 0x58, 0xB5, 0xB7, 0xBA, 0x78}, 0x21},
        {0x0003005000000000, 0, key_type::lvl2, {0x6D, 0xBD, 0x48, 0xD7, 0x87, 0xC5, 0x88, 0x03, 0xA8, 0xD7, 0x24, 0xDA, 0x5A, 0xCF, 0x04, 0xFF, 0x8F, 0xCE, 0x91, 0xD7, 0x54, 0x5D, 0x23, 0x22, 0xF2, 0xB7, 0xAB, 0xF5, 0x70, 0x14, 0xAF, 0x68}, {0x60, 0x3A, 0x36, 0x21, 0x37, 0x08, 0x52, 0x0E, 0xD5, 0xD7, 0x45, 0xDE, 0xC1, 0x32, 0x5B, 0xA5}, {0x58, 0x88, 0xCB, 0x83, 0xAC, 0x3C, 0xCA, 0x96, 0x10, 0xBC, 0x17, 0x3C, 0x53, 0x14, 0x1C, 0x0C, 0xA5, 0x8B, 0x93, 0x71, 0x9E, 0x74, 0x46, 0x60, 0xCA, 0x88, 0x23, 0xD5, 0xEA, 0xEE, 0x8F, 0x9B, 0xF7, 0x36, 0x99, 0x70, 0x54, 0xE4, 0xB7, 0xE3}, {0x00, 0x09, 0xEB, 0xC3, 0xDE, 0x44, 0x2F, 0xA5, 0xFB, 0xF6, 0xC4, 0xF3, 0xD4, 0xF9, 0xEA, 0xB0, 0x77, 0x78, 0xA1, 0x42, 0xBD}, 0x22},
        {0x0003005500000000, 0, key_type::lvl2, {0x84, 0x01, 0x5E, 0x90, 0xFA, 0x23, 0x13, 0x96, 0x28, 0xA3, 0xC7, 0x5C, 0xC0, 0x97, 0x14, 0xE6, 0x42, 0x7B, 0x52, 0x7A, 0x82, 0xD1, 0x8A, 0xBC, 0x3E, 0x91, 0xCD, 0x8D, 0x7D, 0xDA, 0xFF, 0x17}, {0x5B, 0x24, 0x04, 0x44, 0xD6, 0x45, 0xF2, 0x03, 0x81, 0x18, 0xF9, 0x7F, 0xD5, 0xA1, 0x45, 0xD5}, {0xB2, 0x66, 0x31, 0x82, 0x45, 0x26, 0x6B, 0x2D, 0x33, 0x64, 0x1C, 0xD8, 0xA8, 0x64, 0x06, 0x6D, 0x07, 0x7F, 0xAC, 0x60, 0xB7, 0xE2, 0x73, 0x99, 0x09, 0x9A, 0x70, 0xA6, 0x83, 0x45, 0x4B, 0x70, 0xF9, 0x88, 0x8E, 0x7C, 0xC0, 0xC2, 0xBF, 0x72}, {0x00, 0x9D, 0x4C, 0xBA, 0x2B, 0xFB, 0x1A, 0x83, 0x30, 0xD3, 0xE2, 0x0E, 0x59, 0xD2, 0x81, 0xD4, 0x76, 0xD2, 0x31, 0xC7, 0x3A}, 0x32},
        {0x0003005600000000, 0, key_type::lvl2, {0xEA, 0xE1, 0x54, 0x44, 0x04, 0x8E, 0xFD, 0xE7, 0xA8, 0x31, 0xBF, 0xA9, 0xF5, 0xD9, 0x6F, 0x04, 0x7C, 0x9F, 0xCF, 0xF5, 0x07, 0x23, 0xE2, 0x92, 0xCF, 0x50, 0xF5, 0x41, 0x7D, 0x81, 0xE3, 0x59}, {0x9C, 0xA9, 0x28, 0x2D, 0xC7, 0xFA, 0x9F, 0x31, 0x5E, 0xF3, 0x15, 0x6D, 0x97, 0x0B, 0x7C, 0xD4}, {0x0D, 0x58, 0x93, 0x8C, 0xB4, 0x75, 0x98, 0xA6, 0xA6, 0x72, 0x87, 0x4F, 0x17, 0x68, 0x06, 0x8F, 0x8B, 0x80, 0xD8, 0xD1, 0x70, 0x14, 0xD2, 0xAB, 0xEB, 0xAC, 0x85, 0xE5, 0xB0, 0x99, 0x3D, 0x9F, 0xB6, 0xF3, 0x07, 0xDD, 0xC3, 0xDD, 0xA6, 0x99}, {}, 0x33},
        {0x0003006100000000, 0, key_type::lvl2, {0x88, 0xAD, 0x36, 0x7E, 0xDE, 0xC2, 0xFE, 0xED, 0x3E, 0x2F, 0x99, 0xB1, 0xC6, 0x85, 0x07, 0x5C, 0x41, 0xBD, 0xEC, 0x90, 0xC8, 0x4F, 0x52, 0x6C, 0xAF, 0x58, 0x8F, 0x89, 0xBB, 0xD1, 0xCB, 0xCC}, {0x8D, 0x18, 0xE8, 0xE5, 0x25, 0x23, 0x0E, 0x63, 0xDE, 0x10, 0x29, 0x1C, 0x9D, 0xD6, 0x15, 0xBF}, {0x86, 0xEE, 0xD1, 0xD6, 0x5E, 0x58, 0x89, 0x0A, 0xBD, 0xA9, 0xAC, 0xA4, 0x86, 0xA2, 0xBD, 0xDB, 0x9C, 0x0A, 0x52, 0x9C, 0x20, 0x53, 0xFA, 0xE3, 0x01, 0xF0, 0xF6, 0x98, 0xEA, 0xF4, 0x43, 0xDA, 0x0F, 0x60, 0x59, 0x5A, 0x59, 0x7A, 0x70, 0x27}, {}, 0x32},
        {0x0003006600000000, 0, key_type::lvl2, {0x68, 0x8D, 0x5F, 0xCA, 0xC6, 0xF4, 0xEA, 0x35, 0xAC, 0x6A, 0xC7, 0x9B, 0x10, 0x50, 0x60, 0x07, 0x28, 0x61, 0x31, 0xEE, 0x03, 0x81, 0x16, 0xDB, 0x8A, 0xA2, 0xC0, 0xB0, 0x34, 0x0D, 0x9F, 0xB0}, {0x75, 0xE0, 0x23, 0x9D, 0x18, 0xB0, 0xB6, 0x69, 0xEA, 0xE6, 0x50, 0x97, 0x2F, 0x99, 0x72, 0x6B}, {0x00, 0x8E, 0x1C, 0x82, 0x0A, 0xC5, 0x67, 0xD1, 0xBF, 0xB8, 0xFE, 0x3C, 0xC6, 0xAD, 0x2E, 0x18, 0x45, 0xA1, 0xD1, 0xB1, 0x9E, 0xD2, 0xE1, 0x8B, 0x18, 0xCA, 0x34, 0xA8, 0xD2, 0x8A, 0x83, 0xEC, 0x60, 0xC6, 0x38, 0x59, 0xCD, 0xB3, 0xDA, 0xCA}, {}, 0x33},
        {0x0003007400000000, 0, key_type::lvl2, {0xE8, 0x1C, 0x5B, 0x04, 0xC2, 0x9F, 0xB0, 0x79, 0xA4, 0xA2, 0x68, 0x7A, 0x39, 0xD4, 0xEA, 0x97, 0xBF, 0xB4, 0x9D, 0x80, 0xEF, 0x54, 0x6C, 0xEB, 0x29, 0x29, 0x79, 0xA5, 0xF7, 0x7A, 0x62, 0x54}, {0x15, 0x05, 0x8F, 0xA7, 0xF2, 0xCA, 0xD7, 0xC5, 0x28, 0xB5, 0xF6, 0x05, 0xF6, 0x44, 0x4E, 0xB0}, {0x43, 0x8D, 0x0E, 0x5C, 0x1E, 0x7A, 0xFB, 0x18, 0x23, 0x4D, 0xB6, 0x86, 0x74, 0x72, 0xFF, 0x5F, 0x52, 0xB7, 0x50, 0xF3, 0x0C, 0x37, 0x9C, 0x7D, 0xD1, 0xEE, 0x0F, 0xD2, 0x3E, 0x41, 0x7B, 0x3E, 0xA8, 0x19, 0xCC, 0x01, 0xBA, 0xC4, 0x80, 0xED}, {}, 0x11},
        {0x0004001100000000, 0, key_type::lvl2, {0xA1, 0xE4, 0xB8, 0x6E, 0xD0, 0x2B, 0xF7, 0xF1, 0x37, 0x2A, 0x2C, 0x73, 0xFE, 0x02, 0xBC, 0x73, 0x89, 0x07, 0xEB, 0x37, 0xCE, 0x3B, 0xA6, 0x05, 0xFE, 0x78, 0x3C, 0x99, 0x9F, 0xAF, 0xDB, 0x97}, {0xBB, 0xE7, 0x79, 0x9B, 0x9A, 0x37, 0xCB, 0x27, 0x2E, 0x38, 0x66, 0x18, 0xFD, 0xFD, 0x4A, 0xEC}, {0x5B, 0x31, 0xA8, 0xE2, 0xA6, 0x63, 0xEB, 0xD6, 0x73, 0x19, 0x6E, 0x2E, 0x10, 0x22, 0xE0, 0xD6, 0x49, 0x88, 0xC4, 0xE1, 0xBB, 0xFE, 0x5E, 0x47, 0x44, 0x15, 0x88, 0x3A, 0x3B, 0xA0, 0xD9, 0xC5, 0x62, 0xA2, 0xBE, 0x9C, 0x30, 0xE9, 0xB4, 0xA8}, {}, 0x07},
        {0x0004005000000000, 0, key_type::lvl2, {0x0C, 0xAF, 0x21, 0x2B, 0x6F, 0xA5, 0x3C, 0x0D, 0xA7, 0xE2, 0xC5, 0x75, 0xAD, 0xF6, 0x1D, 0xBE, 0x68, 0xF3, 0x4A, 0x33, 0x43, 0x3B, 0x1B, 0x89, 0x1A, 0xBF, 0x5C, 0x42, 0x51, 0x40, 0x6A, 0x03}, {0x9B, 0x79, 0x37, 0x47, 0x22, 0xAD, 0x88, 0x8E, 0xB6, 0xA3, 0x5A, 0x2D, 0xF2, 0x5A, 0x8B, 0x3E}, {0x10, 0x34, 0xA6, 0xF9, 0x8A, 0xF6, 0x62, 0x5C, 0xC3, 0xE3, 0x60, 0x4B, 0x59, 0xB9, 0x71, 0xCA, 0x61, 0x7D, 0xF3, 0x37, 0x53, 0x8D, 0x21, 0x79, 0xEB, 0xB2, 0x2F, 0x3B, 0xDC, 0x9D, 0x0C, 0x6D, 0xA5, 0x6B, 0xA7, 0xDD, 0xFD, 0x20, 0x5A, 0x50}, {}, 0x14}
    };

    constexpr key image_keys[] = {
        {0x0003003000000000, 0x0001, key_type::disk_img, {0x88, 0x60, 0xD0, 0xCF, 0xF4, 0xD0, 0xDC, 0x68, 0x8D, 0x32, 0x23, 0x32, 0x1B, 0x96, 0xB5, 0x9A, 0x77, 0x7E, 0x69, 0x14, 0x96, 0x14, 0x88, 0xE0, 0x70, 0x48, 0xDA, 0xEC, 0xB0, 0x20, 0xEC, 0xA4}, {0xC8, 0x2D, 0x01, 0x5D, 0x46, 0xCF, 0x15, 0x2F, 0x1D, 0xD0, 0xC1, 0x6F, 0x18, 0xB5, 0xB1, 0xE5}, {0x73, 0x39, 0x18, 0xD7, 0xC8, 0x88, 0x13, 0x05, 0x09, 0x34, 0x6E, 0x6B, 0x4A, 0x8B, 0x6C, 0xAA, 0x35, 0x7A, 0xB5, 0x57, 0xE8, 0x14, 0xE8, 0x12, 0x2B, 0xF1, 0x02, 0xC1, 0x4A, 0x31, 0x4B, 0xF9, 0x47, 0x5B, 0x9D, 0x70, 0xEA, 0xF9, 0xEC, 0x29}, {0x00, 0x9B, 0xE8, 0x92, 0xE1, 0x22, 0xA5, 0xC9, 0x43, 0xC1, 0xBB, 0x74, 0x03, 0xA6, 0x73, 0x18, 0xAA, 0x9E, 0x1B, 0x28, 0x6F}, 0x36},
        {0x0003004200000000, 0x0001, key_type::disk_img, {0x10, 0x1E, 0x27, 0xF3, 0xFA, 0x2F, 0xB5, 0x3A, 0xCA, 0x92, 0x4F, 0x78, 0x3A, 0xD5, 0x53, 0x16, 0x2D, 0x56, 0xB9, 0x75, 0xD0, 0x5B, 0x81, 0x35, 0x1A, 0x11, 0x11, 0x79, 0x9F, 0x20, 0x25, 0x4D}, {0x8D, 0x2E, 0x9C, 0x62, 0x97, 0xB8, 0xAD, 0x25, 0x29, 0x98, 0x45, 0x82, 0x96, 0xAC, 0x77, 0x3C}, {0x13, 0x84, 0x46, 0xEE, 0x0B, 0xDD, 0xA5, 0x63, 0x8F, 0x97, 0x32, 0x8C, 0x89, 0x56, 0xE6, 0x48, 0x9C, 0xBB, 0xFE, 0x57, 0xC5, 0x96, 0x1D, 0x40, 0xDD, 0x5C, 0x43, 0xBB, 0x41, 0x38, 0xF1, 0xC4, 0x00, 0xA8, 0xB2, 0x72, 0x04, 0xA5, 0xD6, 0x25}, {0x00, 0x84, 0x9D, 0xBC, 0x57, 0xD3, 0xB9, 0x2F, 0x01, 0x86, 0x4E, 0x6E, 0x82, 0xEB, 0x4E, 0xF0, 0xEF, 0x63, 0x11, 0xE1, 0x22}, 0x32},
        {0x0003005000000000, 0x0001, key_type::disk_img, {0x3F, 0x26, 0x04, 0xFA, 0x27, 0xAE, 0xAD, 0xFB, 0xE1, 0xAC, 0x69, 0xEB, 0x00, 0xBB, 0x16, 0xEF, 0x19, 0x6C, 0x21, 0x93, 0xCB, 0xD6, 0x29, 0x00, 0xFF, 0xD8, 0xC2, 0x50, 0x41, 0x68, 0x08, 0x43}, {0xA4, 0x14, 0xAC, 0x1D, 0xB7, 0x98, 0x7E, 0x43, 0x77, 0x76, 0x51, 0xB3, 0x30, 0xB8, 0x99, 0xE1}, {0x1F, 0x46, 0x33, 0xAF, 0xDE, 0x18, 0x61, 0x4D, 0x6C, 0xEF, 0x38, 0xA2, 0xFD, 0x6C, 0x4C, 0xCA, 0xC7, 0xB6, 0xEB, 0x81, 0x09, 0xD7, 0x2C, 0xD0, 0x66, 0xEC, 0xEB, 0xA0, 0x19, 0x3E, 0xA3, 0xF4, 0x3C, 0x37, 0xAE, 0x83, 0x17, 0x9A, 0x4E, 0x5F}, {0x00, 0x85, 0xB4, 0xB0, 0x5D, 0xEB, 0xA7, 0xE6, 0xAD, 0x83, 0x16, 0x53, 0xC9, 0x74, 0xD9, 0x51, 0x49, 0x80, 0x3B, 0xB2, 0x72}, 0x33},
        {0x0003005500000000, 0x0001, key_type::disk_img, {0xBD, 0xB7, 0x4A, 0xA6, 0xE3, 0xBA, 0x2D, 0xC1, 0x0B, 0x1B, 0xD7, 0xF1, 0x71, 0x98, 0x39, 0x9A, 0x15, 0x8D, 0xBE, 0x1F, 0xA0, 0xBE, 0xA6, 0x8C, 0x90, 0xFC, 0xAC, 0xBE, 0x4D, 0x04, 0xBE, 0x37}, {0x02, 0x07, 0xA4, 0x79, 0xB1, 0x57, 0x4F, 0x8E, 0x7F, 0x69, 0x75, 0x28, 0xF0, 0x5D, 0x54, 0x35}, {0x91, 0x7E, 0x1F, 0x1D, 0xC4, 0x8A, 0x54, 0xEB, 0x5F, 0x10, 0xB3, 0x8E, 0x75, 0x69, 0xBB, 0x53, 0x83, 0x62, 0x8A, 0x7C, 0x90, 0x6F, 0x0D, 0xCA, 0x62, 0xFD, 0xA3, 0x38, 0x05, 0xC1, 0x5F, 0xAB, 0x27, 0x00, 0x16, 0x94, 0x0A, 0x09, 0xDB, 0x58}, {0x00, 0x29, 0x44, 0x11, 0x36, 0x32, 0x90, 0x97, 0x5B, 0xA5, 0x51, 0x33, 0x6D, 0x39, 0x65, 0xD8, 0x8A, 0xF0, 0x29, 0xA1, 0x7B}, 0x03},
        {0x0003005600000000, 0x0001, key_type::disk_img, {0x31, 0x1C, 0x01, 0x5F, 0x16, 0x9F, 0x2A, 0x1E, 0x07, 0x57, 0xF7, 0x06, 0x4B, 0x14, 0xC7, 0xC9, 0xF3, 0xA3, 0xFF, 0xEE, 0x01, 0x5B, 0xD4, 0xE3, 0xA2, 0x24, 0x01, 0xA2, 0x66, 0x78, 0x57, 0xCE}, {0x7B, 0xB8, 0xB3, 0xF5, 0xAC, 0x8E, 0x08, 0x90, 0xE3, 0x14, 0x8A, 0xE5, 0x68, 0x8C, 0x73, 0x50}, {0x3F, 0x04, 0x0E, 0xFA, 0x23, 0x35, 0xFE, 0xD5, 0x67, 0x0B, 0xA4, 0xD5, 0xC3, 0xAB, 0x2D, 0x9D, 0x0B, 0x4B, 0xA6, 0x9D, 0x15, 0x4A, 0x00, 0x62, 0xEA, 0x99, 0x5A, 0x7D, 0x21, 0xDB, 0xAF, 0x0D, 0xC5, 0xA0, 0xDA, 0xD3, 0x33, 0xD1, 0xC1, 0xDD}, {}, 0x08},
        {0x0003006100000000, 0x0001, key_type::disk_img, {0x84, 0x74, 0xAD, 0xCA, 0x3B, 0x32, 0x44, 0x93, 0x1E, 0xEC, 0xEB, 0x93, 0x57, 0x84, 0x14, 0x42, 0x44, 0x2A, 0x1C, 0x4A, 0x4B, 0xCF, 0x4E, 0x49, 0x8E, 0x67, 0x38, 0x95, 0x0F, 0x4E, 0x40, 0x93}, {0xFF, 0xF9, 0xCA, 0xCC, 0xC4, 0x12, 0x91, 0x25, 0xCA, 0xFB, 0x24, 0x0F, 0x41, 0x9E, 0x5F, 0x39}, {0x09, 0x8E, 0x1A, 0x53, 0xE5, 0x9A, 0x95, 0x31, 0x6B, 0x00, 0xD5, 0xA2, 0x9C, 0x05, 0xFF, 0xEB, 0xAE, 0x41, 0xD1, 0xA8, 0xA3, 0x86, 0xF9, 0xDA, 0x96, 0xF9, 0x88, 0x58, 0xFD, 0x25, 0xE0, 0x7B, 0xB7, 0xA3, 0xBC, 0x96, 0xA5, 0xD5, 0xB5, 0x56}, {}, 0x03},
        {0x0003006600000000, 0x0001, key_type::disk_img, {0xE6, 0xA2, 0x1C, 0x59, 0x9B, 0x75, 0x69, 0x6C, 0x16, 0x9E, 0xC0, 0x25, 0x82, 0xBD, 0xA7, 0x4A, 0x77, 0x61, 0x34, 0xA6, 0xE0, 0x51, 0x08, 0xEA, 0x70, 0x1E, 0xC0, 0xCA, 0x2A, 0xC0, 0x35, 0x92}, {0xD2, 0x92, 0xA7, 0xBD, 0x57, 0xC0, 0xBB, 0x2E, 0xAB, 0xBC, 0xA1, 0x25, 0x2F, 0xA9, 0xED, 0xEF}, {0x2E, 0xD0, 0x78, 0xA1, 0x3D, 0xC4, 0x61, 0x7E, 0xB5, 0x50, 0xAD, 0x06, 0xE2, 0x28, 0xC8, 0x3C, 0x14, 0x2A, 0x2D, 0x58, 0x8E, 0xB5, 0xE7, 0x29, 0x40, 0x2D, 0x18, 0x03, 0x8A, 0x14, 0x84, 0x2F, 0xD6, 0x5B, 0x27, 0x7D, 0xCA, 0xD2, 0x25, 0xA5}, {}, 0x08},
        {0x0003007400000000, 0x0001, key_type::disk_img, {0x07, 0x2D, 0x3A, 0x5C, 0x3B, 0xDB, 0x0D, 0x67, 0x4D, 0xE2, 0x09, 0x38, 0x14, 0x32, 0xB2, 0x04, 0x14, 0xBC, 0x9B, 0xDA, 0x0F, 0x58, 0x3E, 0xCB, 0x94, 0xBD, 0x9A, 0x13, 0x41, 0x76, 0xDD, 0x51}, {0x85, 0x16, 0xA8, 0x1F, 0x02, 0xCF, 0x93, 0x87, 0x40, 0x49, 0x8A, 0x40, 0x6C, 0x88, 0x08, 0x71}, {0x5A, 0x77, 0x8D, 0xEB, 0x5C, 0x4F, 0x12, 0xE8, 0xD4, 0x8E, 0x06, 0xA2, 0xBB, 0xBB, 0xE3, 0xC9, 0x0F, 0xA8, 0xC6, 0xC4, 0x7D, 0xF9, 0xBD, 0xB5, 0x69, 0x7F, 0xD4, 0xA8, 0xEB, 0x79, 0x41, 0xCE, 0x3F, 0x59, 0xA5, 0x57, 0xE8, 0x1C, 0x78, 0x7D}, {}, 0x21},
        {0x0003007400000000, 0x0100, key_type::disk_img, {0x78, 0x6F, 0xAB, 0x8A, 0x0B, 0x89, 0x47, 0x4A, 0x2C, 0xB8, 0x0B, 0x3E, 0xA1, 0x04, 0xCC, 0xCB, 0x9E, 0x13, 0xF6, 0x6B, 0x45, 0xEC, 0x49, 0x9B, 0xB3, 0x18, 0x65, 0xD0, 0x7C, 0x66, 0x1E, 0xA8}, {0x94, 0x66, 0x2F, 0x13, 0xD9, 0x9A, 0x9F, 0x5D, 0x21, 0x1C, 0x97, 0x9F, 0xFD, 0xF6, 0x5F, 0xE3}, {0x91, 0x2C, 0x94, 0xC2, 0x52, 0xB7, 0x79, 0x9C, 0xEB, 0x45, 0xDF, 0xBB, 0x73, 0xEF, 0x7C, 0xAD, 0x9B, 0xCC, 0x07, 0x93, 0xA3, 0x33, 0x1B, 0xBB, 0x79, 0xE3, 0xC4, 0x7C, 0x0F, 0x5C, 0x78, 0x2F, 0x69, 0x80, 0x65, 0xA8, 0xD4, 0xDB, 0x0D, 0x8B}, {}, 0x0E},
        {0x0004001100000000, 0x0001, key_type::disk_img, {0x42, 0x62, 0x65, 0x7A, 0x31, 0x85, 0xD9, 0x48, 0x0F, 0x82, 0xC8, 0xBD, 0x2F, 0x81, 0x76, 0x6F, 0xCC, 0x2C, 0x8F, 0xD7, 0xDD, 0x5E, 0xBE, 0x86, 0x57, 0xB0, 0x0B, 0x93, 0x9E, 0x0C, 0x75, 0xBD}, {0x4F, 0x1E, 0x3E, 0xF0, 0x7D, 0x89, 0x3A, 0x47, 0x14, 0xB1, 0xB3, 0xD5, 0xA4, 0xE5, 0x04, 0x79}, {0x4D, 0xBF, 0xCF, 0xA6, 0x8B, 0x52, 0xF1, 0xD6, 0x6E, 0x09, 0xAF, 0xA6, 0xC1, 0x8E, 0xC6, 0x54, 0x79, 0xED, 0xBD, 0x02, 0x7B, 0x6B, 0x8C, 0x6A, 0x5D, 0x85, 0xFE, 0x5C, 0x84, 0xD4, 0x3E, 0xA4, 0x0C, 0xEF, 0x16, 0x72, 0x07, 0x8A, 0x07, 0x02}, {}, 0x11},
        {0x0004001100000000, 0x0100, key_type::disk_img, {0x16, 0xAA, 0x7D, 0x7C, 0x35, 0x39, 0x9E, 0x2B, 0x1B, 0xFA, 0xF6, 0x8C, 0xD1, 0x9D, 0x75, 0x12, 0xA7, 0x85, 0x50, 0x29, 0xC0, 0x8B, 0xEC, 0xC4, 0xCC, 0x3F, 0x03, 0x5D, 0xF7, 0xF9, 0xC7, 0x0B}, {0x0E, 0x50, 0xDB, 0x6D, 0x93, 0x7D, 0x26, 0x2C, 0xB0, 0x49, 0x91, 0x36, 0x85, 0x2F, 0xCB, 0x80}, {0xAE, 0xE2, 0x79, 0x5B, 0xF2, 0x95, 0x66, 0x2A, 0x50, 0xDF, 0xAF, 0xE7, 0x0D, 0x1B, 0x0B, 0x6F, 0x0A, 0x2E, 0xBB, 0x21, 0x1E, 0x13, 0x23, 0xA2, 0x75, 0xFC, 0x6E, 0x2D, 0x13, 0xBE, 0x4F, 0x2F, 0x10, 0xCA, 0x34, 0x78, 0x4F, 0x4C, 0xF1, 0xEC}, {}, 0x0F},
        {0x0004005000000000, 0x0001, key_type::disk_img, {0x63, 0x56, 0x5D, 0xBE, 0x98, 0xC3, 0xB1, 0xA5, 0x2A, 0xAD, 0xC9, 0x07, 0xC4, 0x71, 0x30, 0xFE, 0x57, 0xA1, 0x07, 0x34, 0xE8, 0x4F, 0x22, 0x59, 0x26, 0x70, 0xF8, 0x6E, 0xD2, 0xB0, 0xA0, 0x86}, {0x95, 0x3F, 0x6A, 0x99, 0x89, 0x1B, 0x47, 0x39, 0x35, 0x8F, 0x53, 0x63, 0xA0, 0x0C, 0x08, 0xB9}, {0x26, 0xBE, 0x7B, 0x02, 0xE7, 0xD6, 0x5C, 0x6C, 0x21, 0xBF, 0x40, 0x63, 0xCD, 0xB8, 0xC0, 0x09, 0x2F, 0xE1, 0x67, 0x9D, 0x62, 0xFA, 0x1A, 0x8C, 0xCC, 0x28, 0x4A, 0x1D, 0x21, 0x88, 0x54, 0x73, 0xA9, 0x59, 0x99, 0x25, 0x37, 0xA0, 0x66, 0x12}, {}, 0x15},
        {0x0004005000000000, 0x0100, key_type::disk_img, {0xB9, 0x6E, 0xA3, 0x2C, 0xB9, 0x6E, 0xA3, 0x2D, 0xB9, 0x6E, 0xA3, 0x2C, 0xB9, 0x6E, 0xA3, 0x2C, 0xB9, 0x6E, 0xA3, 0x2C, 0xB9, 0x6E, 0xA3, 0x2D, 0xB9, 0x6E, 0xA3, 0x2C, 0xB9, 0x6E, 0xA3, 0x2C}, {0xB9, 0x6E, 0xA3, 0x2C, 0xB9, 0x6E, 0xA3, 0x2D, 0xB9, 0x6E, 0xA3, 0x2D, 0xB9, 0x6E, 0xA3, 0x2C}, {0x2D, 0x70, 0x66, 0xE6, 0x8C, 0x6A, 0xC3, 0x37, 0x3B, 0x13, 0x46, 0xFD, 0x76, 0xFE, 0x7D, 0x18, 0xA2, 0x07, 0xC8, 0x11, 0x50, 0x0E, 0x65, 0xD8, 0x5D, 0xB5, 0x7B, 0xC4, 0xA2, 0x7A, 0xD7, 0x8F, 0x59, 0xFD, 0x53, 0xF3, 0x8F, 0x50, 0xE1, 0x51}, {0x00, 0x44, 0xAA, 0x25, 0xB4, 0x27, 0x6D, 0x79, 0xB4, 0x94, 0xA2, 0x9C, 0xB8, 0xDE, 0x10, 0x46, 0x42, 0x42, 0x4F, 0x8E, 0xEF}, 0x02},
    };

    constexpr key app_keys[] = {
        {0x0000009200000000, 0x0000, key_type::app, {0x95, 0xF5, 0x00, 0x19, 0xE7, 0xA6, 0x8E, 0x34, 0x1F, 0xA7, 0x2E, 0xFD, 0xF4, 0xD6, 0x0E, 0xD3, 0x76, 0xE2, 0x5C, 0xF4, 0x6B, 0xB4, 0x8D, 0xFD, 0xD1, 0xF0, 0x80, 0x25, 0x9D, 0xC9, 0x3F, 0x04}, {0x4A, 0x09, 0x55, 0xD9, 0x46, 0xDB, 0x70, 0xD6, 0x91, 0xA6, 0x40, 0xBB, 0x7F, 0xAE, 0xCC, 0x4C}, {0x6F, 0x8D, 0xF8, 0xEB, 0xD0, 0xA1, 0xD1, 0xDB, 0x08, 0xB3, 0x0D, 0xD3, 0xA9, 0x51, 0xE3, 0xF1, 0xF2, 0x7E, 0x34, 0x03, 0x0B, 0x42, 0xC7, 0x29, 0xC5, 0x55, 0x55, 0x23, 0x2D, 0x61, 0xB8, 0x34, 0xB8, 0xBD, 0xFF, 0xB0, 0x7E, 0x54, 0xB3, 0x43}, {0x00, 0x6C, 0x3E, 0x4C, 0xCB, 0x2C, 0x69, 0xA5, 0xAD, 0x7C, 0x6F, 0x60, 0x44, 0x8E, 0x50, 0xC7, 0xF9, 0x18, 0x4E, 0xEA, 0xF4}, 0x21},
        {0x0003003000000000, 0x0001, key_type::app, {0x79, 0x48, 0x18, 0x39, 0xC4, 0x06, 0xA6, 0x32, 0xBD, 0xB4, 0xAC, 0x09, 0x3D, 0x73, 0xD9, 0x9A, 0xE1, 0x58, 0x7F, 0x24, 0xCE, 0x7E, 0x69, 0x19, 0x2C, 0x1C, 0xD0, 0x01, 0x02, 0x74, 0xA8, 0xAB}, {0x6F, 0x0F, 0x25, 0xE1, 0xC8, 0xC4, 0xB7, 0xAE, 0x70, 0xDF, 0x96, 0x8B, 0x04, 0x52, 0x1D, 0xDA}, {0x94, 0xD1, 0xB7, 0x37, 0x8B, 0xAF, 0xF5, 0xDF, 0xED, 0x26, 0x92, 0x40, 0xA7, 0xA3, 0x64, 0xED, 0x68, 0x44, 0x67, 0x41, 0x62, 0x2E, 0x50, 0xBC, 0x60, 0x79, 0xB6, 0xE6, 0x06, 0xA2, 0xF8, 0xE0, 0xA4, 0xC5, 0x6E, 0x5C, 0xFF, 0x83, 0x65, 0x26}, {0x00, 0x3D, 0xE8, 0x01, 0x67, 0xD2, 0xF0, 0xE9, 0xD3, 0x0F, 0x21, 0x45, 0x14, 0x4A, 0x55, 0x8D, 0x11, 0x74, 0xF5, 0x41, 0x0C}, 0x11},
        {0x0003003000000000, 0x0002, key_type::app, {0x4F, 0x89, 0xBE, 0x98, 0xDD, 0xD4, 0x3C, 0xAD, 0x34, 0x3F, 0x5B, 0xA6, 0xB1, 0xA1, 0x33, 0xB0, 0xA9, 0x71, 0x56, 0x6F, 0x77, 0x04, 0x84, 0xAA, 0xC2, 0x0B, 0x5D, 0xD1, 0xDC, 0x9F, 0xA0, 0x6A}, {0x90, 0xC1, 0x27, 0xA9, 0xB4, 0x3B, 0xA9, 0xD8, 0xE8, 0x9F, 0xE6, 0x52, 0x9E, 0x25, 0x20, 0x6F}, {0x8C, 0xA6, 0x90, 0x5F, 0x46, 0x14, 0x8D, 0x7D, 0x8D, 0x84, 0xD2, 0xAF, 0xCE, 0xAE, 0x61, 0xB4, 0x1E, 0x67, 0x50, 0xFC, 0x22, 0xEA, 0x43, 0x5D, 0xFA, 0x61, 0xFC, 0xE6, 0xF4, 0xF8, 0x60, 0xEE, 0x4F, 0x54, 0xD9, 0x19, 0x6C, 0xA5, 0x29, 0x0E}, {}, 0x13},
        {0x0003003000000000, 0x0003, key_type::app, {0xC1, 0xE6, 0xA3, 0x51, 0xFC, 0xED, 0x6A, 0x06, 0x36, 0xBF, 0xCB, 0x68, 0x01, 0xA0, 0x94, 0x2D, 0xB7, 0xC2, 0x8B, 0xDF, 0xC5, 0xE0, 0xA0, 0x53, 0xA3, 0xF5, 0x2F, 0x52, 0xFC, 0xE9, 0x75, 0x4E}, {0xE0, 0x90, 0x81, 0x63, 0xF4, 0x57, 0x57, 0x64, 0x40, 0x46, 0x6A, 0xCA, 0xA4, 0x43, 0xAE, 0x7C}, {0x50, 0x02, 0x2D, 0x5D, 0x37, 0xC9, 0x79, 0x05, 0xF8, 0x98, 0xE7, 0x8E, 0x7A, 0xA1, 0x4A, 0x0B, 0x5C, 0xAA, 0xD5, 0xCE, 0x81, 0x90, 0xAE, 0x56, 0x29, 0xA1, 0x0D, 0x6F, 0x0C, 0xF4, 0x17, 0x35, 0x97, 0xB3, 0x7A, 0x95, 0xA7, 0x54, 0x5C, 0x92}, {}, 0x0B},
        {0x0003004200000000, 0x0004, key_type::app, {0x83, 0x8F, 0x58, 0x60, 0xCF, 0x97, 0xCD, 0xAD, 0x75, 0xB3, 0x99, 0xCA, 0x44, 0xF4, 0xC2, 0x14, 0xCD, 0xF9, 0x51, 0xAC, 0x79, 0x52, 0x98, 0xD7, 0x1D, 0xF3, 0xC3, 0xB7, 0xE9, 0x3A, 0xAE, 0xDA}, {0x7F, 0xDB, 0xB2, 0xE9, 0x24, 0xD1, 0x82, 0xBB, 0x0D, 0x69, 0x84, 0x4A, 0xDC, 0x4E, 0xCA, 0x5B}, {0x1F, 0x14, 0x0E, 0x8E, 0xF8, 0x87, 0xDA, 0xB5, 0x2F, 0x07, 0x9A, 0x06, 0xE6, 0x91, 0x5A, 0x64, 0x60, 0xB7, 0x5C, 0xD2, 0x56, 0x83, 0x4A, 0x43, 0xFA, 0x7A, 0xF9, 0x0C, 0x23, 0x06, 0x7A, 0xF4, 0x12, 0xED, 0xAF, 0xE2, 0xC1, 0x77, 0x8D, 0x69}, {0x00, 0x74, 0xE9, 0x22, 0xFD, 0xEE, 0x5D, 0xC4, 0xCD, 0xF2, 0x2F, 0xC8, 0xD7, 0x98, 0x64, 0x77, 0xF8, 0x13, 0x40, 0x08, 0x60}, 0x14},
        {0x0003004200000000, 0x0005, key_type::app, {0xC1, 0x09, 0xAB, 0x56, 0x59, 0x3D, 0xE5, 0xBE, 0x8B, 0xA1, 0x90, 0x57, 0x8E, 0x7D, 0x81, 0x09, 0x34, 0x6E, 0x86, 0xA1, 0x10, 0x88, 0xB4, 0x2C, 0x72, 0x7E, 0x2B, 0x79, 0x3F, 0xD6, 0x4B, 0xDC}, {0x15, 0xD3, 0xF1, 0x91, 0x29, 0x5C, 0x94, 0xB0, 0x9B, 0x71, 0xEB, 0xDE, 0x08, 0x8A, 0x18, 0x7A}, {0xB6, 0xBB, 0x0A, 0x84, 0xC6, 0x49, 0xA9, 0x0D, 0x97, 0xEB, 0xA5, 0x5B, 0x55, 0x53, 0x66, 0xF5, 0x23, 0x81, 0xBB, 0x38, 0xA8, 0x4C, 0x8B, 0xB7, 0x1D, 0xA5, 0xA5, 0xA0, 0x94, 0x90, 0x43, 0xC6, 0xDB, 0x24, 0x90, 0x29, 0xA4, 0x31, 0x56, 0xF7}, {}, 0x15},
        {0x0003004200000000, 0x0006, key_type::app, {0x6D, 0xFD, 0x7A, 0xFB, 0x47, 0x0D, 0x2B, 0x2C, 0x95, 0x5A, 0xB2, 0x22, 0x64, 0xB1, 0xFF, 0x3C, 0x67, 0xF1, 0x80, 0x98, 0x3B, 0x26, 0xC0, 0x16, 0x15, 0xDE, 0x9F, 0x2E, 0xCC, 0xBE, 0x7F, 0x41}, {0x24, 0xBD, 0x1C, 0x19, 0xD2, 0xA8, 0x28, 0x6B, 0x8A, 0xCE, 0x39, 0xE4, 0xA3, 0x78, 0x01, 0xC2}, {0x71, 0xF4, 0x6A, 0xC3, 0x3F, 0xF8, 0x9D, 0xF5, 0x89, 0xA1, 0x00, 0xA7, 0xFB, 0x64, 0xCE, 0xAC, 0x24, 0x4C, 0x9A, 0x0C, 0xBB, 0xC1, 0xFD, 0xCE, 0x80, 0xFB, 0x4B, 0xF8, 0xA0, 0xD2, 0xE6, 0x62, 0x93, 0x30, 0x9C, 0xB8, 0xEE, 0x8C, 0xFA, 0x95}, {}, 0x2C},
        {0x0003005000000000, 0x0007, key_type::app, {0x94, 0x5B, 0x99, 0xC0, 0xE6, 0x9C, 0xAF, 0x05, 0x58, 0xC5, 0x88, 0xB9, 0x5F, 0xF4, 0x1B, 0x23, 0x26, 0x60, 0xEC, 0xB0, 0x17, 0x74, 0x1F, 0x32, 0x18, 0xC1, 0x2F, 0x9D, 0xFD, 0xEE, 0xDE, 0x55}, {0x1D, 0x5E, 0xFB, 0xE7, 0xC5, 0xD3, 0x4A, 0xD6, 0x0F, 0x9F, 0xBC, 0x46, 0xA5, 0x97, 0x7F, 0xCE}, {0xAB, 0x28, 0x4C, 0xA5, 0x49, 0xB2, 0xDE, 0x9A, 0xA5, 0xC9, 0x03, 0xB7, 0x56, 0x52, 0xF7, 0x8D, 0x19, 0x2F, 0x8F, 0x4A, 0x8F, 0x3C, 0xD9, 0x92, 0x09, 0x41, 0x5C, 0x0A, 0x84, 0xC5, 0xC9, 0xFD, 0x6B, 0xF3, 0x09, 0x5C, 0x1C, 0x18, 0xFF, 0xCD}, {0x00, 0x2C, 0xF8, 0x96, 0xD3, 0x5D, 0xB8, 0x71, 0xD0, 0xE6, 0xA2, 0x52, 0xE7, 0x99, 0x87, 0x6A, 0x70, 0xD0, 0x43, 0xC2, 0x3E}, 0x15},
        {0x0003005000000000, 0x0008, key_type::app, {0x2C, 0x9E, 0x89, 0x69, 0xEC, 0x44, 0xDF, 0xB6, 0xA8, 0x77, 0x1D, 0xC7, 0xF7, 0xFD, 0xFB, 0xCC, 0xAF, 0x32, 0x9E, 0xC3, 0xEC, 0x07, 0x09, 0x00, 0xCA, 0xBB, 0x23, 0x74, 0x2A, 0x9A, 0x6E, 0x13}, {0x5A, 0x4C, 0xEF, 0xD5, 0xA9, 0xC3, 0xC0, 0x93, 0xD0, 0xB9, 0x35, 0x23, 0x76, 0xD1, 0x94, 0x05}, {0x6E, 0x82, 0xF6, 0xB5, 0x4A, 0x0E, 0x9D, 0xEB, 0xE4, 0xA8, 0xB3, 0x04, 0x3E, 0xE3, 0xB2, 0x4C, 0xD9, 0xBB, 0xB6, 0x2B, 0x44, 0x16, 0xB0, 0x48, 0x25, 0x82, 0xE4, 0x19, 0xA2, 0x55, 0x2E, 0x29, 0xAB, 0x4B, 0xEA, 0x0A, 0x4D, 0x7F, 0xA2, 0xD5}, {}, 0x16},
        {0x0003005000000000, 0x0009, key_type::app, {0xF6, 0x9E, 0x4A, 0x29, 0x34, 0xF1, 0x14, 0xD8, 0x9F, 0x38, 0x6C, 0xE7, 0x66, 0x38, 0x83, 0x66, 0xCD, 0xD2, 0x10, 0xF1, 0xD8, 0x91, 0x3E, 0x3B, 0x97, 0x32, 0x57, 0xF1, 0x20, 0x1D, 0x63, 0x2B}, {0xF4, 0xD5, 0x35, 0x06, 0x93, 0x01, 0xEE, 0x88, 0x8C, 0xC2, 0xA8, 0x52, 0xDB, 0x65, 0x44, 0x61}, {0x1D, 0x7B, 0x97, 0x4D, 0x10, 0xE6, 0x1C, 0x2E, 0xD0, 0x87, 0xA0, 0x98, 0x15, 0x35, 0x90, 0x46, 0x77, 0xEC, 0x07, 0xE9, 0x62, 0x60, 0xF8, 0x95, 0x65, 0xFF, 0x7E, 0xBD, 0xA4, 0xEE, 0x03, 0x5C, 0x2A, 0xA9, 0xBC, 0xBD, 0xD5, 0x89, 0x3F, 0x99}, {}, 0x2D},
        {0x0003005500000000, 0x000A, key_type::app, {0x29, 0x80, 0x53, 0x02, 0xE7, 0xC9, 0x2F, 0x20, 0x40, 0x09, 0x16, 0x1C, 0xA9, 0x3F, 0x77, 0x6A, 0x07, 0x21, 0x41, 0xA8, 0xC4, 0x6A, 0x10, 0x8E, 0x57, 0x1C, 0x46, 0xD4, 0x73, 0xA1, 0x76, 0xA3}, {0x5D, 0x1F, 0xAB, 0x84, 0x41, 0x07, 0x67, 0x6A, 0xBC, 0xDF, 0xC2, 0x5E, 0xAE, 0xBC, 0xB6, 0x33}, {0x09, 0x30, 0x1B, 0x64, 0x36, 0xC8, 0x5B, 0x53, 0xCB, 0x15, 0x85, 0x30, 0x0A, 0x3F, 0x1A, 0xF9, 0xFB, 0x14, 0xDB, 0x7C, 0x30, 0x08, 0x8C, 0x46, 0x42, 0xAD, 0x66, 0xD5, 0xC1, 0x48, 0xB8, 0x99, 0x5B, 0xB1, 0xA6, 0x98, 0xA8, 0xC7, 0x18, 0x27}, {0x00, 0x10, 0x81, 0x8E, 0xD8, 0xA6, 0x66, 0x05, 0x1C, 0x61, 0x98, 0x66, 0x2C, 0x3D, 0x6D, 0xDE, 0x2C, 0xA4, 0x90, 0x1D, 0xDC}, 0x25},
        {0x0003005500000000, 0x000B, key_type::app, {0xA4, 0xC9, 0x74, 0x02, 0xCC, 0x8A, 0x71, 0xBC, 0x77, 0x48, 0x66, 0x1F, 0xE9, 0xCE, 0x7D, 0xF4, 0x4D, 0xCE, 0x95, 0xD0, 0xD5, 0x89, 0x38, 0xA5, 0x9F, 0x47, 0xB9, 0xE9, 0xDB, 0xA7, 0xBF, 0xC3}, {0xE4, 0x79, 0x2F, 0x2B, 0x9D, 0xB3, 0x0C, 0xB8, 0xD1, 0x59, 0x60, 0x77, 0xA1, 0x3F, 0xB3, 0xB5}, {0x27, 0x33, 0xC8, 0x89, 0xD2, 0x89, 0x55, 0x0F, 0xE0, 0x0E, 0xAA, 0x5A, 0x47, 0xA3, 0x4C, 0xEF, 0x0C, 0x1A, 0xF1, 0x87, 0x61, 0x0E, 0xB0, 0x7B, 0xA3, 0x5D, 0x2C, 0x09, 0xBB, 0x73, 0xC8, 0x0B, 0x24, 0x4E, 0xB4, 0x14, 0x77, 0x00, 0xD1, 0xBF}, {}, 0x26},
        {0x0003005500000000, 0x000C, key_type::app, {0x98, 0x14, 0xEF, 0xFF, 0x67, 0xB7, 0x07, 0x4D, 0x1B, 0x26, 0x3B, 0xF8, 0x5B, 0xDC, 0x85, 0x76, 0xCE, 0x9D, 0xEC, 0x91, 0x41, 0x23, 0x97, 0x1B, 0x16, 0x94, 0x72, 0xA1, 0xBC, 0x23, 0x87, 0xFA}, {0xD4, 0x3B, 0x1F, 0xA8, 0xBE, 0x15, 0x71, 0x4B, 0x30, 0x78, 0xC2, 0x39, 0x08, 0xBB, 0x2B, 0xCA}, {0x7D, 0x19, 0x86, 0xC6, 0xBE, 0xE6, 0xCE, 0x1E, 0x0C, 0x58, 0x93, 0xBD, 0x2D, 0xF2, 0x03, 0x88, 0x1F, 0x40, 0xD5, 0x05, 0x67, 0x61, 0xCC, 0x3F, 0x1F, 0x2E, 0x9D, 0x9A, 0x37, 0x86, 0x17, 0xA2, 0xDE, 0x40, 0xBA, 0x5F, 0x09, 0x84, 0x4C, 0xEB}, {}, 0x3D},
        {0x0003005600000000, 0x000D, key_type::app, {0x03, 0xB4, 0xC4, 0x21, 0xE0, 0xC0, 0xDE, 0x70, 0x8C, 0x0F, 0x0B, 0x71, 0xC2, 0x4E, 0x3E, 0xE0, 0x43, 0x06, 0xAE, 0x73, 0x83, 0xD8, 0xC5, 0x62, 0x13, 0x94, 0xCC, 0xB9, 0x9F, 0xF7, 0xA1, 0x94}, {0x5A, 0xDB, 0x9E, 0xAF, 0xE8, 0x97, 0xB5, 0x4C, 0xB1, 0x06, 0x0D, 0x68, 0x85, 0xBE, 0x22, 0xCF}, {0x71, 0x50, 0x2A, 0xDB, 0x57, 0x83, 0x58, 0x3A, 0xB8, 0x8B, 0x2D, 0x5F, 0x23, 0xF4, 0x19, 0xAF, 0x01, 0xC8, 0xB1, 0xE7, 0x2F, 0xCA, 0x1E, 0x69, 0x4A, 0xD4, 0x9F, 0xE3, 0x26, 0x6F, 0x1F, 0x9C, 0x61, 0xEF, 0xC6, 0xF2, 0x9B, 0x35, 0x11, 0x42}, {}, 0x12},
        {0x0003005600000000, 0x000E, key_type::app, {0x39, 0xA8, 0x70, 0x17, 0x3C, 0x22, 0x6E, 0xB8, 0xA3, 0xEE, 0xE9, 0xCA, 0x6F, 0xB6, 0x75, 0xE8, 0x20, 0x39, 0xB2, 0xD0, 0xCC, 0xB2, 0x26, 0x53, 0xBF, 0xCE, 0x4D, 0xB0, 0x13, 0xBA, 0xEA, 0x03}, {0x90, 0x26, 0x6C, 0x98, 0xCB, 0xAA, 0x06, 0xC1, 0xBF, 0x14, 0x5F, 0xF7, 0x60, 0xEA, 0x1B, 0x45}, {0x84, 0xDE, 0x56, 0x92, 0x80, 0x98, 0x48, 0xE5, 0xAC, 0xBE, 0x25, 0xBE, 0x54, 0x8F, 0x69, 0x81, 0xE3, 0xDB, 0x14, 0x73, 0x5A, 0x5D, 0xDE, 0x1A, 0x0F, 0xD1, 0xF4, 0x75, 0x86, 0x65, 0x32, 0xB8, 0x62, 0xB1, 0xAB, 0x6A, 0x00, 0x4B, 0x72, 0x55}, {}, 0x27},
        {0x0003005600000000, 0x000F, key_type::app, {0xFD, 0x52, 0xDF, 0xA7, 0xC6, 0xEE, 0xF5, 0x67, 0x96, 0x28, 0xD1, 0x2E, 0x26, 0x7A, 0xA8, 0x63, 0xB9, 0x36, 0x5E, 0x6D, 0xB9, 0x54, 0x70, 0x94, 0x9C, 0xFD, 0x23, 0x5B, 0x3F, 0xCA, 0x0F, 0x3B}, {0x64, 0xF5, 0x02, 0x96, 0xCF, 0x8C, 0xF4, 0x9C, 0xD7, 0xC6, 0x43, 0x57, 0x28, 0x87, 0xDA, 0x0B}, {0x06, 0x96, 0xD6, 0xCC, 0xBD, 0x7C, 0xF5, 0x85, 0xEF, 0x5E, 0x00, 0xD5, 0x47, 0x50, 0x3C, 0x18, 0x5D, 0x74, 0x21, 0x58, 0x1B, 0xAD, 0x19, 0x6E, 0x08, 0x17, 0x23, 0xCD, 0x0A, 0x97, 0xFA, 0x40, 0xB2, 0xC0, 0xCD, 0x24, 0x92, 0xB0, 0xB5, 0xA1}, {}, 0x3A},
        {0x0003006100000000, 0x0010, key_type::app, {0xA5, 0xE5, 0x1A, 0xD8, 0xF3, 0x2F, 0xFB, 0xDE, 0x80, 0x89, 0x72, 0xAC, 0xEE, 0x46, 0x39, 0x7F, 0x2D, 0x3F, 0xE6, 0xBC, 0x82, 0x3C, 0x82, 0x18, 0xEF, 0x87, 0x5E, 0xE3, 0xA9, 0xB0, 0x58, 0x4F}, {0x7A, 0x20, 0x3D, 0x51, 0x12, 0xF7, 0x99, 0x97, 0x9D, 0xF0, 0xE1, 0xB8, 0xB5, 0xB5, 0x2A, 0xA4}, {0x50, 0x59, 0x7B, 0x7F, 0x68, 0x0D, 0xD8, 0x9F, 0x65, 0x94, 0xD9, 0xBD, 0xC0, 0xCB, 0xEE, 0x03, 0x66, 0x6A, 0xB5, 0x36, 0x47, 0xD0, 0x48, 0x7F, 0x7F, 0x45, 0x2F, 0xE2, 0xDD, 0x02, 0x69, 0x46, 0x31, 0xEA, 0x75, 0x55, 0x48, 0xC9, 0xE9, 0x34}, {}, 0x25},
        {0x0003006100000000, 0x0011, key_type::app, {0x0F, 0x8E, 0xAB, 0x88, 0x84, 0xA5, 0x1D, 0x09, 0x2D, 0x72, 0x50, 0x59, 0x73, 0x88, 0xE3, 0xB8, 0xB7, 0x54, 0x44, 0xAC, 0x13, 0x8B, 0x9D, 0x36, 0xE5, 0xC7, 0xC5, 0xB8, 0xC3, 0xDF, 0x18, 0xFD}, {0x97, 0xAF, 0x39, 0xC3, 0x83, 0xE7, 0xEF, 0x1C, 0x98, 0xFA, 0x44, 0x7C, 0x59, 0x7E, 0xA8, 0xFE}, {0x2F, 0xDA, 0x7A, 0x56, 0xAA, 0xEA, 0x65, 0x92, 0x1C, 0x02, 0x84, 0xFF, 0x19, 0x42, 0xC6, 0xDE, 0x13, 0x73, 0x70, 0x09, 0x3D, 0x10, 0x60, 0x34, 0xB5, 0x91, 0x91, 0x95, 0x1A, 0x52, 0x01, 0xB4, 0x22, 0xD4, 0x62, 0xF8, 0x72, 0x6F, 0x85, 0x2D}, {}, 0x26},
        {0x0003006600000000, 0x0013, key_type::app, {0xDB, 0xF6, 0x2D, 0x76, 0xFC, 0x81, 0xC8, 0xAC, 0x92, 0x37, 0x2A, 0x9D, 0x63, 0x1D, 0xDC, 0x92, 0x19, 0xF1, 0x52, 0xC5, 0x9C, 0x4B, 0x20, 0xBF, 0xF8, 0xF9, 0x6B, 0x64, 0xAB, 0x06, 0x5E, 0x94}, {0xCB, 0x5D, 0xD4, 0xBE, 0x8C, 0xF1, 0x15, 0xFF, 0xB2, 0x58, 0x01, 0xBC, 0x60, 0x86, 0xE7, 0x29}, {0xB2, 0x6F, 0xE6, 0xD3, 0xE3, 0xA1, 0xE7, 0x66, 0xFA, 0xE7, 0x9A, 0x8E, 0x6A, 0x7F, 0x48, 0x99, 0x8E, 0x7F, 0xC1, 0xE4, 0xB0, 0xAD, 0x87, 0x45, 0xFF, 0x54, 0xC0, 0x18, 0xC2, 0xA6, 0xCC, 0x7A, 0x0D, 0xD7, 0x52, 0x5F, 0xAF, 0xEA, 0x49, 0x17}, {}, 0x12},
        {0x0003006600000000, 0x0014, key_type::app, {0x49, 0x1B, 0x0D, 0x72, 0xBB, 0x21, 0xED, 0x11, 0x59, 0x50, 0x37, 0x9F, 0x45, 0x64, 0xCE, 0x78, 0x4A, 0x4B, 0xFA, 0xAB, 0xB0, 0x0E, 0x8C, 0xB7, 0x12, 0x94, 0xB1, 0x92, 0xB7, 0xB9, 0xF8, 0x8E}, {0xF9, 0x88, 0x43, 0x58, 0x8F, 0xED, 0x8B, 0x0E, 0x62, 0xD7, 0xDD, 0xCB, 0x6F, 0x0C, 0xEC, 0xF4}, {0x04, 0x27, 0x5E, 0x88, 0x38, 0xEF, 0x95, 0xBD, 0x01, 0x3B, 0x22, 0x3C, 0x3D, 0xF6, 0x74, 0x54, 0x09, 0x32, 0xF2, 0x1B, 0x53, 0x4C, 0x7E, 0xD2, 0x94, 0x4B, 0x91, 0x04, 0xD9, 0x38, 0xFE, 0xB0, 0x3B, 0x82, 0x4D, 0xDB, 0x86, 0x6A, 0xB2, 0x6E}, {}, 0x27},
        {0x0003007400000000, 0x0016, key_type::app, {0xA1, 0x06, 0x69, 0x22, 0x24, 0xF1, 0xE9, 0x1E, 0x1C, 0x4E, 0xBA, 0xD4, 0xA2, 0x5F, 0xBF, 0xF6, 0x6B, 0x4B, 0x13, 0xE8, 0x8D, 0x87, 0x8E, 0x8C, 0xD0, 0x72, 0xF2, 0x3C, 0xD1, 0xC5, 0xBF, 0x7C}, {0x62, 0x77, 0x3C, 0x70, 0xBD, 0x74, 0x92, 0x69, 0xC0, 0xAF, 0xD1, 0xF1, 0x2E, 0x73, 0x90, 0x9E}, {0x56, 0x66, 0x35, 0xD3, 0xE1, 0xDC, 0xEC, 0x47, 0x24, 0x3A, 0xAD, 0x16, 0x28, 0xAE, 0x6B, 0x2C, 0xEB, 0x33, 0x46, 0x3F, 0xC1, 0x55, 0xE4, 0x63, 0x58, 0x46, 0xCE, 0x33, 0x89, 0x9C, 0x5E, 0x35, 0x3D, 0xDF, 0xA4, 0x7F, 0xEF, 0x56, 0x94, 0xAF}, {}, 0x30},
        {0x0003007400000000, 0x0017, key_type::app, {0x4E, 0x10, 0x4D, 0xCE, 0x09, 0xBA, 0x87, 0x8C, 0x75, 0xDA, 0x98, 0xD0, 0xB1, 0x63, 0x6F, 0x0E, 0x5F, 0x05, 0x83, 0x28, 0xD8, 0x14, 0x19, 0xE2, 0xA3, 0xD2, 0x2A, 0xB0, 0x25, 0x6F, 0xDF, 0x46}, {0x95, 0x4A, 0x86, 0xC4, 0x62, 0x9E, 0x11, 0x65, 0x32, 0x30, 0x4A, 0x74, 0x08, 0x62, 0xEF, 0x85}, {0x3B, 0x7B, 0x04, 0xC7, 0x1C, 0xAE, 0x2B, 0x11, 0x99, 0xD5, 0x74, 0x53, 0xC0, 0x38, 0xBB, 0x1B, 0x54, 0x1A, 0x05, 0xAD, 0x1B, 0x94, 0x16, 0x7B, 0x0A, 0xB4, 0x7A, 0x9B, 0x24, 0xCA, 0xEC, 0xB9, 0x00, 0x0C, 0xB2, 0x14, 0x07, 0x00, 0x96, 0x66}, {}, 0x08},
        {0x0003007400000000, 0x0018, key_type::app, {0x1F, 0x87, 0x6A, 0xB2, 0x52, 0xDD, 0xBC, 0xB7, 0x0E, 0x74, 0xDC, 0x4A, 0x20, 0xCD, 0x8E, 0xD5, 0x1E, 0x33, 0x0E, 0x62, 0x49, 0x0E, 0x65, 0x2F, 0x86, 0x28, 0x77, 0xE8, 0xD8, 0xD0, 0xF9, 0x97}, {0xBF, 0x8D, 0x6B, 0x18, 0x87, 0xFA, 0x88, 0xE6, 0xD8, 0x5C, 0x2E, 0xDB, 0x2F, 0xBE, 0xC1, 0x47}, {0x64, 0xA0, 0x41, 0x26, 0xD7, 0x7B, 0xF6, 0xB4, 0xD6, 0x86, 0xF6, 0xE8, 0xF8, 0x7D, 0xD1, 0x50, 0xA5, 0xB0, 0x14, 0xBA, 0x92, 0x2D, 0x2B, 0x69, 0x4F, 0xFF, 0x44, 0x53, 0xE1, 0x12, 0x39, 0xA6, 0xE0, 0xB5, 0x8F, 0x17, 0x03, 0xC5, 0x14, 0x94}, {}, 0x11},
        {0x0004001100000000, 0x0019, key_type::app, {0x32, 0x36, 0xB9, 0x93, 0x71, 0x74, 0xDF, 0x1D, 0xC1, 0x2E, 0xC2, 0xDD, 0x8A, 0x31, 0x8A, 0x0E, 0xA4, 0xD3, 0xEC, 0xDE, 0xA5, 0xDF, 0xB4, 0xAC, 0x1B, 0x82, 0x78, 0x44, 0x70, 0x00, 0xC2, 0x97}, {0x61, 0x53, 0xDE, 0xE7, 0x81, 0xB8, 0xAD, 0xDC, 0x6A, 0x43, 0x94, 0x98, 0xB8, 0x16, 0xDC, 0x46}, {0x14, 0x8D, 0xCA, 0x96, 0x1E, 0x27, 0x38, 0xBA, 0xF8, 0x4B, 0x2D, 0x1B, 0x6E, 0x2D, 0xA2, 0xAB, 0xD6, 0xA9, 0x5F, 0x2C, 0x95, 0x71, 0xE5, 0x4C, 0x69, 0x22, 0xF9, 0xED, 0x96, 0x74, 0xF0, 0x62, 0xB7, 0xF1, 0xBE, 0x5B, 0xD6, 0xFA, 0x52, 0x68}, {}, 0x31},
        {0x0004001100000000, 0x001A, key_type::app, {0x5E, 0xFD, 0x1E, 0x99, 0x61, 0x46, 0x27, 0x94, 0xE3, 0xB9, 0xEF, 0x2A, 0x4D, 0x0C, 0x1F, 0x46, 0xF6, 0x42, 0xAA, 0xE0, 0x53, 0xB5, 0x02, 0x55, 0x04, 0x13, 0x05, 0x90, 0xE6, 0x6F, 0x19, 0xC9}, {0x1A, 0xC8, 0xFA, 0x3B, 0x3C, 0x90, 0xF8, 0xFD, 0xE6, 0x39, 0x51, 0x5F, 0x91, 0xB5, 0x83, 0x27}, {0xBE, 0x4B, 0x1B, 0x51, 0x35, 0x36, 0x96, 0x06, 0x18, 0xBF, 0xEF, 0x12, 0xA7, 0x13, 0xF6, 0x67, 0x38, 0x81, 0xB0, 0x2F, 0x9D, 0xC6, 0x16, 0x19, 0x1E, 0x82, 0x3F, 0xC8, 0x33, 0x7C, 0xCF, 0x99, 0xAD, 0xAA, 0x61, 0x72, 0x01, 0x9C, 0x0C, 0x23}, {}, 0x17},
        {0x0004001100000000, 0x001B, key_type::app, {0x66, 0x63, 0x75, 0x70, 0xD1, 0xDE, 0xC0, 0x98, 0x46, 0x7D, 0xB2, 0x07, 0xBA, 0xEA, 0x78, 0x68, 0x61, 0x96, 0x4D, 0x09, 0x64, 0xD4, 0xDB, 0xAF, 0x89, 0xE7, 0x6F, 0x46, 0x95, 0x5D, 0x18, 0x1B}, {0x9F, 0x7B, 0x57, 0x13, 0xA5, 0xED, 0x59, 0xF6, 0xB3, 0x5C, 0xD8, 0xF8, 0xA1, 0x65, 0xD4, 0xB8}, {0x4A, 0xB6, 0xFB, 0x1F, 0x6F, 0x0C, 0x3D, 0x92, 0x19, 0x92, 0x3C, 0x1A, 0xC6, 0x83, 0x13, 0x7A, 0xB0, 0x5D, 0xF6, 0x67, 0x83, 0x3C, 0xC6, 0xA5, 0xE8, 0xF5, 0x90, 0xE4, 0xE2, 0x8F, 0xE2, 0xEB, 0x18, 0x0C, 0x7D, 0x58, 0x61, 0x11, 0x7C, 0xFB}, {}, 0x12},
        {0x0004004600000000, 0x001C, key_type::app, {0xCF, 0xF0, 0x25, 0x37, 0x5B, 0xA0, 0x07, 0x92, 0x26, 0xBE, 0x01, 0xF4, 0xA3, 0x1F, 0x34, 0x6D, 0x79, 0xF6, 0x2C, 0xFB, 0x64, 0x3C, 0xA9, 0x10, 0xE1, 0x6C, 0xF6, 0x0B, 0xD9, 0x09, 0x27, 0x52}, {0xFD, 0x40, 0x66, 0x4E, 0x2E, 0xBB, 0xA0, 0x1B, 0xF3, 0x59, 0xB0, 0xDC, 0xDF, 0x54, 0x3D, 0xA4}, {0x36, 0xC1, 0xAC, 0xE6, 0xDD, 0x5C, 0xCC, 0x00, 0x06, 0xFD, 0xF3, 0x42, 0x47, 0x50, 0xFA, 0xC5, 0x15, 0xFC, 0x5C, 0xFA, 0x2C, 0x93, 0xEC, 0x53, 0xC6, 0xEC, 0x2B, 0xC4, 0x21, 0x70, 0x8D, 0x15, 0x4E, 0x91, 0xF2, 0xE7, 0xEA, 0x54, 0xA8, 0x93}, {}, 0x09},
        {0x0004004600000000, 0x001D, key_type::app, {0xD2, 0x02, 0x17, 0x4E, 0xB6, 0x5A, 0x62, 0x04, 0x8F, 0x36, 0x74, 0xB5, 0x9E, 0xF6, 0xFE, 0x72, 0xE1, 0x87, 0x29, 0x62, 0xF3, 0xE1, 0xCD, 0x65, 0x8D, 0xE8, 0xD7, 0xAF, 0x71, 0xDA, 0x1F, 0x3E}, {0xAC, 0xB9, 0x94, 0x59, 0x14, 0xEB, 0xB7, 0xB9, 0xA3, 0x1E, 0xCE, 0x32, 0x0A, 0xE0, 0x9F, 0x2D}, {0x43, 0x03, 0x22, 0x88, 0x75, 0x03, 0xCF, 0x52, 0x92, 0x8F, 0xAA, 0xA4, 0x10, 0xFD, 0x62, 0x3C, 0x73, 0x21, 0x28, 0x1C, 0x88, 0x25, 0xD9, 0x5F, 0x5B, 0x47, 0xEF, 0x07, 0x8E, 0xFC, 0xFC, 0x44, 0x45, 0x4C, 0x3A, 0xB4, 0xF0, 0x0B, 0xB8, 0x79}, {}, 0x1A}
    };

    constexpr key npdrm_keys[] = {
        {0x0001000000000000, 0x0001, key_type::npdrm, {0xF9, 0xED, 0xD0, 0x30, 0x1F, 0x77, 0x0F, 0xAB, 0xBA, 0x88, 0x63, 0xD9, 0x89, 0x7F, 0x0F, 0xEA, 0x65, 0x51, 0xB0, 0x94, 0x31, 0xF6, 0x13, 0x12, 0x65, 0x4E, 0x28, 0xF4, 0x35, 0x33, 0xEA, 0x6B}, {0xA5, 0x51, 0xCC, 0xB4, 0xA4, 0x2C, 0x37, 0xA7, 0x34, 0xA2, 0xB4, 0xF9, 0x65, 0x7D, 0x55, 0x40}, {0xB0, 0x5F, 0x9D, 0xA5, 0xF9, 0x12, 0x1E, 0xE4, 0x03, 0x14, 0x67, 0xE7, 0x4C, 0x50, 0x5C, 0x29, 0xA8, 0xE2, 0x9D, 0x10, 0x22, 0x37, 0x9E, 0xDF, 0xF0, 0x50, 0x0B, 0x9A, 0xE4, 0x80, 0xB5, 0xDA, 0xB4, 0x57, 0x8A, 0x4C, 0x61, 0xC5, 0xD6, 0xBF}, {0x00, 0x04, 0x0A, 0xB4, 0x75, 0x09, 0xBE, 0xD0, 0x4B, 0xD9, 0x65, 0x21, 0xAD, 0x1B, 0x36, 0x5B, 0x86, 0xBF, 0x62, 0x0A, 0x98}, 0x11},
        {0x0001000000000000, 0x0002, key_type::npdrm, {0x8E, 0x73, 0x72, 0x30, 0xC8, 0x0E, 0x66, 0xAD, 0x01, 0x62, 0xED, 0xDD, 0x32, 0xF1, 0xF7, 0x74, 0xEE, 0x5E, 0x4E, 0x18, 0x74, 0x49, 0xF1, 0x90, 0x79, 0x43, 0x7A, 0x50, 0x8F, 0xCF, 0x9C, 0x86}, {0x7A, 0xAE, 0xCC, 0x60, 0xAD, 0x12, 0xAE, 0xD9, 0x0C, 0x34, 0x8D, 0x8C, 0x11, 0xD2, 0xBE, 0xD5}, {0x05, 0xBF, 0x09, 0xCB, 0x6F, 0xD7, 0x80, 0x50, 0xC7, 0x8D, 0xE6, 0x9C, 0xC3, 0x16, 0xFF, 0x27, 0xC9, 0xF1, 0xED, 0x66, 0xA4, 0x5B, 0xFC, 0xE0, 0xA1, 0xE5, 0xA6, 0x74, 0x9B, 0x19, 0xBD, 0x54, 0x6B, 0xBB, 0x46, 0x02, 0xCF, 0x37, 0x34, 0x40}, {}, 0x0A},
        {0x0003003000000000, 0x0003, key_type::npdrm, {0x1B, 0x71, 0x5B, 0x0C, 0x3E, 0x8D, 0xC4, 0xC1, 0xA5, 0x77, 0x2E, 0xBA, 0x9C, 0x5D, 0x34, 0xF7, 0xCC, 0xFE, 0x5B, 0x82, 0x02, 0x5D, 0x45, 0x3F, 0x31, 0x67, 0x56, 0x64, 0x97, 0x23, 0x96, 0x64}, {0xE3, 0x1E, 0x20, 0x6F, 0xBB, 0x8A, 0xEA, 0x27, 0xFA, 0xB0, 0xD9, 0xA2, 0xFF, 0xB6, 0xB6, 0x2F}, {0x3F, 0x51, 0xE5, 0x9F, 0xC7, 0x4D, 0x66, 0x18, 0xD3, 0x44, 0x31, 0xFA, 0x67, 0x98, 0x7F, 0xA1, 0x1A, 0xBB, 0xFA, 0xCC, 0x71, 0x11, 0x81, 0x14, 0x73, 0xCD, 0x99, 0x88, 0xFE, 0x91, 0xC4, 0x3F, 0xC7, 0x46, 0x05, 0xE7, 0xB8, 0xCB, 0x73, 0x2D}, {}, 0x08},
        {0x0003004200000000, 0x0004, key_type::npdrm, {0xBB, 0x4D, 0xBF, 0x66, 0xB7, 0x44, 0xA3, 0x39, 0x34, 0x17, 0x2D, 0x9F, 0x83, 0x79, 0xA7, 0xA5, 0xEA, 0x74, 0xCB, 0x0F, 0x55, 0x9B, 0xB9, 0x5D, 0x0E, 0x7A, 0xEC, 0xE9, 0x17, 0x02, 0xB7, 0x06}, {0xAD, 0xF7, 0xB2, 0x07, 0xA1, 0x5A, 0xC6, 0x01, 0x11, 0x0E, 0x61, 0xDD, 0xFC, 0x21, 0x0A, 0xF6}, {0x9C, 0x32, 0x74, 0x71, 0xBA, 0xFF, 0x1F, 0x87, 0x7A, 0xE4, 0xFE, 0x29, 0xF4, 0x50, 0x1A, 0xF5, 0xAD, 0x6A, 0x2C, 0x45, 0x9F, 0x86, 0x22, 0x69, 0x7F, 0x58, 0x3E, 0xFC, 0xA2, 0xCA, 0x30, 0xAB, 0xB5, 0xCD, 0x45, 0xD1, 0x13, 0x1C, 0xAB, 0x30}, {0x00, 0xB6, 0x1A, 0x91, 0xDF, 0x4A, 0xB6, 0xA9, 0xF1, 0x42, 0xC3, 0x26, 0xBA, 0x95, 0x92, 0xB5, 0x26, 0x5D, 0xA8, 0x88, 0x56}, 0x16},
        {0x0003004200000000, 0x0006, key_type::npdrm, {0x8B, 0x4C, 0x52, 0x84, 0x97, 0x65, 0xD2, 0xB5, 0xFA, 0x3D, 0x56, 0x28, 0xAF, 0xB1, 0x76, 0x44, 0xD5, 0x2B, 0x9F, 0xFE, 0xE2, 0x35, 0xB4, 0xC0, 0xDB, 0x72, 0xA6, 0x28, 0x67, 0xEA, 0xA0, 0x20}, {0x05, 0x71, 0x9D, 0xF1, 0xB1, 0xD0, 0x30, 0x6C, 0x03, 0x91, 0x0A, 0xDD, 0xCE, 0x4A, 0xF8, 0x87}, {0x2A, 0x5D, 0x6C, 0x69, 0x08, 0xCA, 0x98, 0xFC, 0x47, 0x40, 0xD8, 0x34, 0xC6, 0x40, 0x0E, 0x6D, 0x6A, 0xD7, 0x4C, 0xF0, 0xA7, 0x12, 0xCF, 0x1E, 0x7D, 0xAE, 0x80, 0x6E, 0x98, 0x60, 0x5C, 0xC3, 0x08, 0xF6, 0xA0, 0x36, 0x58, 0xF2, 0x97, 0x0E}, {}, 0x29},
        {0x0003005000000000, 0x0007, key_type::npdrm, {0x39, 0x46, 0xDF, 0xAA, 0x14, 0x17, 0x18, 0xC7, 0xBE, 0x33, 0x9A, 0x0D, 0x6C, 0x26, 0x30, 0x1C, 0x76, 0xB5, 0x68, 0xAE, 0xBC, 0x5C, 0xD5, 0x26, 0x52, 0xF2, 0xE2, 0xE0, 0x29, 0x74, 0x37, 0xC3}, {0xE4, 0x89, 0x7B, 0xE5, 0x53, 0xAE, 0x02, 0x5C, 0xDC, 0xBF, 0x2B, 0x15, 0xD1, 0xC9, 0x23, 0x4E}, {0xA1, 0x3A, 0xFE, 0x8B, 0x63, 0xF8, 0x97, 0xDA, 0x2D, 0x3D, 0xC3, 0x98, 0x7B, 0x39, 0x38, 0x9D, 0xC1, 0x0B, 0xAD, 0x99, 0xDF, 0xB7, 0x03, 0x83, 0x8C, 0x4A, 0x0B, 0xC4, 0xE8, 0xBB, 0x44, 0x65, 0x9C, 0x72, 0x6C, 0xFD, 0x0C, 0xE6, 0x0D, 0x0E}, {0x00, 0x9E, 0xF8, 0x69, 0x07, 0x78, 0x2A, 0x31, 0x8D, 0x4C, 0xC3, 0x61, 0x7E, 0xBA, 0xCE, 0x24, 0x80, 0xE7, 0x3A, 0x46, 0xF6}, 0x17},
        {0x0003005000000000, 0x0009, key_type::npdrm, {0x07, 0x86, 0xF4, 0xB0, 0xCA, 0x59, 0x37, 0xF5, 0x15, 0xBD, 0xCE, 0x18, 0x8F, 0x56, 0x9B, 0x2E, 0xF3, 0x10, 0x9A, 0x4D, 0xA0, 0x78, 0x0A, 0x7A, 0xA0, 0x7B, 0xD8, 0x9C, 0x33, 0x50, 0x81, 0x0A}, {0x04, 0xAD, 0x3C, 0x2F, 0x12, 0x2A, 0x3B, 0x35, 0xE8, 0x04, 0x85, 0x0C, 0xAD, 0x14, 0x2C, 0x6D}, {0xA1, 0xFE, 0x61, 0x03, 0x5D, 0xBB, 0xEA, 0x5A, 0x94, 0xD1, 0x20, 0xD0, 0x3C, 0x00, 0x0D, 0x3B, 0x2F, 0x08, 0x4B, 0x9F, 0x4A, 0xFA, 0x99, 0xA2, 0xD4, 0xA5, 0x88, 0xDF, 0x92, 0xB8, 0xF3, 0x63, 0x27, 0xCE, 0x9E, 0x47, 0x88, 0x9A, 0x45, 0xD0}, {}, 0x2A},
        {0x0003005500000000, 0x000A, key_type::npdrm, {0x03, 0xC2, 0x1A, 0xD7, 0x8F, 0xBB, 0x6A, 0x3D, 0x42, 0x5E, 0x9A, 0xAB, 0x12, 0x98, 0xF9, 0xFD, 0x70, 0xE2, 0x9F, 0xD4, 0xE6, 0xE3, 0xA3, 0xC1, 0x51, 0x20, 0x5D, 0xA5, 0x0C, 0x41, 0x3D, 0xE4}, {0x0A, 0x99, 0xD4, 0xD4, 0xF8, 0x30, 0x1A, 0x88, 0x05, 0x2D, 0x71, 0x4A, 0xD2, 0xFB, 0x56, 0x5E}, {0x39, 0x95, 0xC3, 0x90, 0xC9, 0xF7, 0xFB, 0xBA, 0xB1, 0x24, 0xA1, 0xC1, 0x4E, 0x70, 0xF9, 0x74, 0x1A, 0x5E, 0x6B, 0xDF, 0x17, 0xA6, 0x05, 0xD8, 0x82, 0x39, 0x65, 0x2C, 0x8E, 0xA7, 0xD5, 0xFC, 0x9F, 0x24, 0xB3, 0x05, 0x46, 0xC1, 0xE4, 0x4B}, {0x00, 0x9A, 0xC6, 0xB2, 0x2A, 0x05, 0x6B, 0xA9, 0xE0, 0xB6, 0xD1, 0x52, 0x0F, 0x28, 0xA5, 0x7A, 0x31, 0x35, 0x48, 0x3F, 0x9F}, 0x27},
        {0x0003005500000000, 0x000C, key_type::npdrm, {0x35, 0x7E, 0xBB, 0xEA, 0x26, 0x5F, 0xAE, 0xC2, 0x71, 0x18, 0x2D, 0x57, 0x1C, 0x6C, 0xD2, 0xF6, 0x2C, 0xFA, 0x04, 0xD3, 0x25, 0x58, 0x8F, 0x21, 0x3D, 0xB6, 0xB2, 0xE0, 0xED, 0x16, 0x6D, 0x92}, {0xD2, 0x6E, 0x6D, 0xD2, 0xB7, 0x4C, 0xD7, 0x8E, 0x86, 0x6E, 0x74, 0x2E, 0x55, 0x71, 0xB8, 0x4F}, {0x00, 0xDC, 0xF5, 0x39, 0x16, 0x18, 0x60, 0x4A, 0xB4, 0x2C, 0x8C, 0xFF, 0x3D, 0xC3, 0x04, 0xDF, 0x45, 0x34, 0x1E, 0xBA, 0x45, 0x51, 0x29, 0x3E, 0x9E, 0x2B, 0x68, 0xFF, 0xE2, 0xDF, 0x52, 0x7F, 0xFA, 0x3B, 0xE8, 0x32, 0x9E, 0x01, 0x5E, 0x57}, {}, 0x3A},
        {0x0003005600000000, 0x000D, key_type::npdrm, {0x33, 0x7A, 0x51, 0x41, 0x61, 0x05, 0xB5, 0x6E, 0x40, 0xD7, 0xCA, 0xF1, 0xB9, 0x54, 0xCD, 0xAF, 0x4E, 0x76, 0x45, 0xF2, 0x83, 0x79, 0x90, 0x4F, 0x35, 0xF2, 0x7E, 0x81, 0xCA, 0x7B, 0x69, 0x57}, {0x84, 0x05, 0xC8, 0x8E, 0x04, 0x22, 0x80, 0xDB, 0xD7, 0x94, 0xEC, 0x7E, 0x22, 0xB7, 0x40, 0x02}, {0x9B, 0xFF, 0x1C, 0xC7, 0x11, 0x8D, 0x23, 0x93, 0xDE, 0x50, 0xD5, 0xCF, 0x44, 0x90, 0x98, 0x60, 0x68, 0x34, 0x11, 0xA5, 0x32, 0x76, 0x7B, 0xFD, 0xAC, 0x78, 0x62, 0x2D, 0xB9, 0xE5, 0x45, 0x67, 0x53, 0xFE, 0x42, 0x2C, 0xBA, 0xFA, 0x1D, 0xA1}, {}, 0x18},
        {0x0003005600000000, 0x000F, key_type::npdrm, {0x13, 0x5C, 0x09, 0x8C, 0xBE, 0x6A, 0x3E, 0x03, 0x7E, 0xBE, 0x9F, 0x2B, 0xB9, 0xB3, 0x02, 0x18, 0xDD, 0xE8, 0xD6, 0x82, 0x17, 0x34, 0x6F, 0x9A, 0xD3, 0x32, 0x03, 0x35, 0x2F, 0xBB, 0x32, 0x91}, {0x40, 0x70, 0xC8, 0x98, 0xC2, 0xEA, 0xAD, 0x16, 0x34, 0xA2, 0x88, 0xAA, 0x54, 0x7A, 0x35, 0xA8}, {0xBB, 0xD7, 0xCC, 0xCB, 0x55, 0x6C, 0x2E, 0xF0, 0xF9, 0x08, 0xDC, 0x78, 0x10, 0xFA, 0xFC, 0x37, 0xF2, 0xE5, 0x6B, 0x3D, 0xAA, 0x5F, 0x7F, 0xAF, 0x53, 0xA4, 0x94, 0x4A, 0xA9, 0xB8, 0x41, 0xF7, 0x6A, 0xB0, 0x91, 0xE1, 0x6B, 0x23, 0x14, 0x33}, {}, 0x3B},
        {0x0003006100000000, 0x0010, key_type::npdrm, {0x4B, 0x3C, 0xD1, 0x0F, 0x6A, 0x6A, 0xA7, 0xD9, 0x9F, 0x9B, 0x3A, 0x66, 0x0C, 0x35, 0xAD, 0xE0, 0x8E, 0xF0, 0x1C, 0x2C, 0x33, 0x6B, 0x9E, 0x46, 0xD1, 0xBB, 0x56, 0x78, 0xB4, 0x26, 0x1A, 0x61}, {0xC0, 0xF2, 0xAB, 0x86, 0xE6, 0xE0, 0x45, 0x75, 0x52, 0xDB, 0x50, 0xD7, 0x21, 0x93, 0x71, 0xC5}, {0x64, 0xA5, 0xC6, 0x0B, 0xC2, 0xAD, 0x18, 0xB8, 0xA2, 0x37, 0xE4, 0xAA, 0x69, 0x06, 0x47, 0xE1, 0x2B, 0xF7, 0xA0, 0x81, 0x52, 0x3F, 0xAD, 0x4F, 0x29, 0xBE, 0x89, 0xAC, 0xAC, 0x72, 0xF7, 0xAB, 0x43, 0xC7, 0x4E, 0xC9, 0xAF, 0xFD, 0xA2, 0x13}, {}, 0x27},
        {0x0003006600000000, 0x0013, key_type::npdrm, {0x26, 0x5C, 0x93, 0xCF, 0x48, 0x56, 0x2E, 0xC5, 0xD1, 0x87, 0x73, 0xBE, 0xB7, 0x68, 0x9B, 0x8A, 0xD1, 0x0C, 0x5E, 0xB6, 0xD2, 0x14, 0x21, 0x45, 0x5D, 0xEB, 0xC4, 0xFB, 0x12, 0x8C, 0xBF, 0x46}, {0x8D, 0xEA, 0x5F, 0xF9, 0x59, 0x68, 0x2A, 0x9B, 0x98, 0xB6, 0x88, 0xCE, 0xA1, 0xEF, 0x4A, 0x1D}, {0x9D, 0x8D, 0xB5, 0xA8, 0x80, 0x60, 0x8D, 0xC6, 0x97, 0x17, 0x99, 0x1A, 0xFC, 0x3A, 0xD5, 0xC0, 0x21, 0x5A, 0x5E, 0xE4, 0x13, 0x32, 0x8C, 0x2A, 0xBC, 0x8F, 0x35, 0x58, 0x9E, 0x04, 0x43, 0x23, 0x73, 0xDB, 0x2E, 0x23, 0x39, 0xEE, 0xF7, 0xC8}, {}, 0x18},
        {0x0003007400000000, 0x0016, key_type::npdrm, {0x79, 0x10, 0x34, 0x04, 0x83, 0xE4, 0x19, 0xE5, 0x5F, 0x0D, 0x33, 0xE4, 0xEA, 0x54, 0x10, 0xEE, 0xEC, 0x3A, 0xF4, 0x78, 0x14, 0x66, 0x7E, 0xCA, 0x2A, 0xA9, 0xD7, 0x56, 0x02, 0xB1, 0x4D, 0x4B}, {0x4A, 0xD9, 0x81, 0x43, 0x1B, 0x98, 0xDF, 0xD3, 0x9B, 0x63, 0x88, 0xED, 0xAD, 0x74, 0x2A, 0x8E}, {0x62, 0xDF, 0xE4, 0x88, 0xE4, 0x10, 0xB1, 0xB6, 0xB2, 0xF5, 0x59, 0xE4, 0xCB, 0x93, 0x2B, 0xCB, 0x78, 0x84, 0x5A, 0xB6, 0x23, 0xCC, 0x59, 0xFD, 0xF6, 0x51, 0x68, 0x40, 0x0F, 0xD7, 0x6F, 0xA8, 0x2E, 0xD1, 0xDC, 0x60, 0xE0, 0x91, 0xD1, 0xD1}, {}, 0x25},
        {0x0004001100000000, 0x0019, key_type::npdrm, {0xFB, 0xDA, 0x75, 0x96, 0x3F, 0xE6, 0x90, 0xCF, 0xF3, 0x5B, 0x7A, 0xA7, 0xB4, 0x08, 0xCF, 0x63, 0x17, 0x44, 0xED, 0xEF, 0x5F, 0x79, 0x31, 0xA0, 0x4D, 0x58, 0xFD, 0x6A, 0x92, 0x1F, 0xFD, 0xB3}, {0xF7, 0x2C, 0x1D, 0x80, 0xFF, 0xDA, 0x2E, 0x3B, 0xF0, 0x85, 0xF4, 0x13, 0x3E, 0x6D, 0x28, 0x05}, {0x63, 0x7E, 0xAD, 0x34, 0xE7, 0xB8, 0x5C, 0x72, 0x3C, 0x62, 0x7E, 0x68, 0xAB, 0xDD, 0x04, 0x19, 0x91, 0x4E, 0xBE, 0xD4, 0x00, 0x83, 0x11, 0x73, 0x1D, 0xD8, 0x7F, 0xDD, 0xA2, 0xDA, 0xF7, 0x1F, 0x85, 0x6A, 0x70, 0xE1, 0x4D, 0xA1, 0x7B, 0x42}, {}, 0x24},
        {0x0004004600000000, 0x001C, key_type::npdrm, {0x81, 0x03, 0xEA, 0x9D, 0xB7, 0x90, 0x57, 0x82, 0x19, 0xC4, 0xCE, 0xDF, 0x05, 0x92, 0xB4, 0x30, 0x64, 0xA7, 0xD9, 0x8B, 0x60, 0x1B, 0x6C, 0x7B, 0xC4, 0x51, 0x08, 0xC4, 0x04, 0x7A, 0xA8, 0x0F}, {0x24, 0x6F, 0x4B, 0x83, 0x28, 0xBE, 0x6A, 0x2D, 0x39, 0x4E, 0xDE, 0x20, 0x47, 0x92, 0x47, 0xC5}, {0x50, 0x31, 0x72, 0xC9, 0x55, 0x13, 0x08, 0xA8, 0x76, 0x21, 0xEC, 0xEE, 0x90, 0x36, 0x2D, 0x14, 0x88, 0x9B, 0xFE, 0xD2, 0xCF, 0x32, 0xB0, 0xB3, 0xE3, 0x2A, 0x4F, 0x9F, 0xE5, 0x27, 0xA4, 0x14, 0x64, 0xB7, 0x35, 0xE1, 0xAD, 0xBC, 0x67, 0x62}, {}, 0x30}
    };

    constexpr key other_keys[] = {
        {0x0003003000000000, 0x0000, key_type::other, {0xD9, 0x11, 0x66, 0x97, 0x39, 0x79, 0xEA, 0x86, 0x94, 0x47, 0x6B, 0x01, 0x1A, 0xC6, 0x2C, 0x7E, 0x9F, 0x37, 0xDA, 0x26, 0xDE, 0x1E, 0x5C, 0x2E, 0xE3, 0xD6, 0x6E, 0x42, 0xB8, 0x51, 0x70, 0x85}, {0xDC, 0x01, 0x28, 0x0A, 0x6E, 0x46, 0xBC, 0x67, 0x4B, 0x81, 0xA7, 0xE8, 0x80, 0x1E, 0xBE, 0x6E}, {0xA0, 0xFC, 0x44, 0x10, 0x82, 0x36, 0x14, 0x1B, 0xF3, 0x51, 0x7A, 0x66, 0x2B, 0x02, 0x7A, 0xFC, 0x1A, 0xC5, 0x13, 0xA0, 0x56, 0x90, 0x49, 0x6C, 0x75, 0x4D, 0xEB, 0x7D, 0x43, 0xBD, 0xC4, 0x1B, 0x80, 0xFD, 0x75, 0xC2, 0x12, 0x62, 0x4E, 0xE4}, {}, 0x11},
        {0x0003004200000000, 0x0000, key_type::other, {0xB7, 0x31, 0x11, 0xB0, 0xB0, 0x01, 0x17, 0xE4, 0x8D, 0xE5, 0xE2, 0xEE, 0x5E, 0x53, 0x4C, 0x0F, 0x0E, 0xFF, 0xA4, 0x89, 0x0B, 0xBB, 0x8C, 0xAD, 0x01, 0xEE, 0x0F, 0x84, 0x8F, 0x91, 0x58, 0x3E}, {0x86, 0xF5, 0x6F, 0x9E, 0x5D, 0xE5, 0x13, 0x89, 0x48, 0x74, 0xB8, 0xBA, 0x25, 0x33, 0x34, 0xB1}, {0xB0, 0xBA, 0x1A, 0x1A, 0xB9, 0x72, 0x3B, 0xB4, 0xE8, 0x7C, 0xED, 0x96, 0x37, 0xBE, 0x05, 0x60, 0x66, 0xBC, 0x56, 0xE1, 0x65, 0x72, 0xD4, 0x3D, 0x02, 0x10, 0xA0, 0x64, 0x11, 0xDB, 0xF8, 0xFE, 0xB8, 0x88, 0x5C, 0xD9, 0x12, 0x38, 0x4A, 0xE5}, {}, 0x12},
        {0x0003005000000000, 0x0000, key_type::other, {0x8E, 0x94, 0x42, 0x67, 0xC0, 0x2E, 0x69, 0xA4, 0xFE, 0x47, 0x4B, 0x7F, 0x5F, 0xCD, 0x79, 0x74, 0xA4, 0xF9, 0x36, 0xFF, 0x43, 0x55, 0xAE, 0xC4, 0xF8, 0x0E, 0xFA, 0x12, 0x38, 0x58, 0xD8, 0xF6}, {0x90, 0x8A, 0x75, 0x75, 0x4E, 0x52, 0x1E, 0xAC, 0x2F, 0x5A, 0x48, 0x89, 0xC6, 0xD7, 0xB7, 0x2D}, {0x91, 0x20, 0x1D, 0xA7, 0xD7, 0x9E, 0x8E, 0xE2, 0x56, 0x31, 0x42, 0xEC, 0xBD, 0x64, 0x6D, 0xA0, 0x26, 0xC9, 0x63, 0xAC, 0x09, 0xE7, 0x60, 0xE5, 0x39, 0x0F, 0xFE, 0x24, 0xDA, 0xE6, 0x86, 0x43, 0x10, 0xAB, 0xE1, 0x47, 0xF8, 0x20, 0x4D, 0x0B}, {}, 0x13},
        {0x0003005500000000, 0x0000, key_type::other, {0xBB, 0x31, 0xDF, 0x9A, 0x6F, 0x62, 0xC0, 0xDF, 0x85, 0x30, 0x75, 0xFA, 0xA6, 0x51, 0x34, 0xD9, 0xCE, 0x22, 0x40, 0x30, 0x6C, 0x17, 0x31, 0xD1, 0xF7, 0xDA, 0x9B, 0x53, 0x29, 0xBD, 0x69, 0x9F}, {0x26, 0x30, 0x57, 0x22, 0x58, 0x73, 0xF8, 0x39, 0x40, 0xA6, 0x5C, 0x8C, 0x92, 0x6A, 0xC3, 0xE4}, {0xBC, 0x3A, 0x82, 0xA4, 0xF4, 0x4C, 0x43, 0xA1, 0x97, 0x07, 0x0C, 0xD2, 0x36, 0xFD, 0xC9, 0x4F, 0xCC, 0x54, 0x2D, 0x69, 0xA3, 0xE8, 0x03, 0xE0, 0xAF, 0xF7, 0x8D, 0x1F, 0x3D, 0xA1, 0x9A, 0x79, 0xD2, 0xF6, 0x1F, 0xAB, 0x5B, 0x94, 0xB4, 0x37}, {}, 0x23},
        {0x0003005600000000, 0x0000, key_type::other, {0x71, 0xAA, 0x75, 0xC7, 0x0A, 0x25, 0x55, 0x80, 0xE4, 0xAE, 0x9B, 0xDA, 0xA0, 0xB0, 0x88, 0x28, 0xC5, 0x3E, 0xAA, 0x71, 0x3C, 0xD0, 0x71, 0x37, 0x97, 0xF1, 0x43, 0xB2, 0x84, 0xC1, 0x58, 0x9B}, {0x9D, 0xED, 0x87, 0x8C, 0xB6, 0xBA, 0x07, 0x12, 0x1C, 0x0F, 0x50, 0xE7, 0xB1, 0x72, 0xA8, 0xBF}, {0x38, 0x7F, 0xCD, 0xAE, 0xAF, 0xF1, 0xB5, 0x9C, 0xFA, 0xF7, 0x9C, 0xE6, 0x21, 0x5A, 0x06, 0x5A, 0xCE, 0xAF, 0xFA, 0xF4, 0x04, 0x8A, 0x4F, 0x21, 0x7E, 0x1F, 0xF5, 0xCE, 0x67, 0xC6, 0x6E, 0xC3, 0xF0, 0x89, 0xDB, 0x23, 0x5E, 0x52, 0xF9, 0xD3}, {}, 0x29},
        {0x0003006100000000, 0x0000, key_type::other, {0xF5, 0xD1, 0xDB, 0xC1, 0x82, 0xF5, 0x08, 0x3C, 0xD4, 0xEA, 0x37, 0xC4, 0x31, 0xC7, 0xDA, 0xC7, 0x38, 0x82, 0xC0, 0x7F, 0x23, 0x2D, 0x26, 0x99, 0xB1, 0xDD, 0x9F, 0xDD, 0xF1, 0xBF, 0x41, 0x95}, {0xD3, 0xA7, 0xC3, 0xC9, 0x1C, 0xBA, 0x01, 0x4F, 0xCB, 0xCA, 0x6D, 0x55, 0x70, 0xDE, 0x13, 0xFF}, {0x97, 0xCA, 0x8A, 0x97, 0x81, 0xF4, 0x5E, 0x55, 0x7E, 0x98, 0xF1, 0x76, 0xEF, 0x79, 0x4F, 0xCD, 0xA6, 0xB1, 0x51, 0xEB, 0x3D, 0xFD, 0x1A, 0xBA, 0x12, 0x15, 0x1E, 0x00, 0xAE, 0x59, 0x95, 0x7C, 0x3B, 0x15, 0x62, 0x8F, 0xC8, 0x87, 0x5D, 0x28}, {}, 0x23},
        {0x0003006600000000, 0x0000, key_type::other, {0xBF, 0x10, 0xF0, 0x95, 0x90, 0xC0, 0x15, 0x2F, 0x7E, 0xF7, 0x49, 0xFF, 0x4B, 0x99, 0x01, 0x22, 0xA4, 0xE8, 0xE5, 0x49, 0x1D, 0xA4, 0x9A, 0x2D, 0x93, 0x1E, 0x72, 0xEE, 0xB9, 0x90, 0xF8, 0x60}, {0x22, 0xC1, 0x9C, 0x55, 0x22, 0xF7, 0xA7, 0x82, 0xAF, 0xC5, 0x47, 0xC2, 0x64, 0x0F, 0x5B, 0xDE}, {0x32, 0x33, 0xBA, 0x2B, 0x28, 0x41, 0x89, 0xFB, 0x16, 0x87, 0xDF, 0x65, 0x30, 0x02, 0x25, 0x7A, 0x09, 0x25, 0xD8, 0xEB, 0x0C, 0x64, 0xEB, 0xBE, 0x8C, 0xC7, 0xDE, 0x87, 0xF5, 0x48, 0xD1, 0x07, 0xDE, 0x1F, 0xD3, 0xD1, 0xD2, 0x85, 0xDB, 0x4F}, {}, 0x29},
        {0x0003007400000000, 0x0000, key_type::other, {0xF1, 0x1D, 0xBD, 0x2C, 0x97, 0xB3, 0x2A, 0xD3, 0x7E, 0x55, 0xF8, 0xE7, 0x43, 0xBC, 0x82, 0x1D, 0x3E, 0x67, 0x63, 0x0A, 0x67, 0x84, 0xD9, 0xA0, 0x58, 0xDD, 0xD2, 0x63, 0x13, 0x48, 0x2F, 0x0F}, {0xFC, 0x5F, 0xA1, 0x2C, 0xA3, 0xD2, 0xD3, 0x36, 0xC4, 0xB8, 0xB4, 0x25, 0xD6, 0x79, 0xDA, 0x55}, {0x19, 0xE2, 0x7E, 0xE9, 0x0E, 0x33, 0xED, 0xAB, 0x16, 0xB2, 0x2E, 0x68, 0x8B, 0x5F, 0x70, 0x4E, 0x5C, 0x6E, 0xC1, 0x06, 0x20, 0x70, 0xEB, 0xF4, 0x35, 0x54, 0xCD, 0x03, 0xDF, 0xDA, 0xE1, 0x6D, 0x68, 0x4B, 0xB8, 0xB5, 0x57, 0x4D, 0xBE, 0xCA}, {}, 0x15},
        {0x0004001100000000, 0x0000, key_type::other, {0x75, 0x1E, 0xE9, 0x49, 0xCD, 0x3A, 0xDF, 0x50, 0xA4, 0x69, 0x19, 0x74, 0x94, 0xA1, 0xEC, 0x35, 0x84, 0x09, 0xCC, 0xBE, 0x6E, 0x85, 0x21, 0x7E, 0xBD, 0xE7, 0xA8, 0x7D, 0x3F, 0xF1, 0xAB, 0xD8}, {0x23, 0xAE, 0x4A, 0xDA, 0x4D, 0x3F, 0x79, 0x8D, 0xC5, 0xED, 0x98, 0x00, 0x03, 0x37, 0xFF, 0x77}, {0x1B, 0xAB, 0xA8, 0x7C, 0xD1, 0xAD, 0x70, 0x5C, 0x46, 0x2D, 0x4E, 0x74, 0x27, 0xB6, 0xDA, 0xF5, 0x9A, 0x50, 0x38, 0x3A, 0x34, 0x8A, 0x15, 0x08, 0x8F, 0x0E, 0xDF, 0xCF, 0x1A, 0xDF, 0x2B, 0x5C, 0x2B, 0x2D, 0x50, 0x7B, 0x2A, 0x35, 0x7D, 0x36}, {}, 0x1A},
        {0x0004004600000000, 0x0000, key_type::other, {0x46, 0xBD, 0x08, 0x91, 0x22, 0x4E, 0x0C, 0xE1, 0x3E, 0x21, 0x62, 0x92, 0x1D, 0x4B, 0xB7, 0x61, 0x93, 0xAE, 0xEE, 0x44, 0x16, 0xA7, 0x29, 0xFC, 0xDD, 0x11, 0x1C, 0x55, 0x36, 0xBF, 0x87, 0xC9}, {0xBF, 0x03, 0x63, 0x87, 0xCD, 0xB6, 0x13, 0xC0, 0xAC, 0x88, 0xA6, 0xD9, 0xD2, 0xCC, 0x53, 0x16}, {0xA1, 0x4F, 0x6D, 0x5F, 0x9A, 0xD7, 0xEB, 0xB3, 0xB7, 0xA3, 0x9A, 0x7C, 0x32, 0xF1, 0x3E, 0x5D, 0xC3, 0xB0, 0xBA, 0x16, 0xBD, 0xC3, 0x3D, 0x39, 0xFD, 0xDF, 0x88, 0xF4, 0xAE, 0xEA, 0x6C, 0xFE, 0xEB, 0x0C, 0x07, 0x96, 0xC9, 0x17, 0xA9, 0x52}, {}, 0x0F}
    };
    
    template<typename F, std::size_t N>
    svl::expected<key> get_key(const key (&val)[N], F&& func)
    {
        for(auto k : val)
            if(func(k))
                return k;

        return svl::none();
    }

    svl::expected<key> get_self_key(key_type type, u16 rev, u64 ver)
    {
        switch(type)
        {
        case key_type::lvl0:
            return lvl0_key;
        case key_type::lvl1:
            return get_key(lvl1_keys, [=](auto& k) { return k.version == ver; });
        case key_type::lvl2:
            return get_key(lvl2_keys, [=](auto& k) { return k.version == ver; });
        case key_type::app:
            return get_key(app_keys, [=](auto& k) { return k.revision == rev; });
        case key_type::disk_img:
            return get_key(image_keys, [=](auto& k) { return k.version == ver && k.revision == rev; });
        case key_type::loader:
            return loader_key;
        case key_type::other:
            return get_key(other_keys, [=](auto& k) { return k.version == ver; });
        case key_type::npdrm:
            return get_key(npdrm_keys, [=](auto& k) { return k.revision == rev; });
        default:
            return svl::none();
        }
    }
}